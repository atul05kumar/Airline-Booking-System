/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package airlinebookingsystem;

import java.awt.ComponentOrientation;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Atul-PC
 */
public class loginFrame extends javax.swing.JFrame {

    /**
     * Creates new form loginFrame
     */
   
    
    public loginFrame() {
        initComponents();
         registrationPanel.setVisible(false);
         searchFlightsPanel.setVisible(false);
         userWelcomePanel.setVisible(false);
         paymentPanel.setVisible(false);
         passengerDetailsPanel.setVisible(false);
         RiviewFlightDetailsPanel.setVisible(false);
         searchResultsPanel.setVisible(false);
         reservationAdminPanel.setVisible(false);
         adminWelcomePanel.setVisible(false);
         summaryPanel.setVisible(false);
         userInfoPanel.setVisible(false);
         updateUserInfoPanel.setVisible(false);
         searchResIdResultPanel.setVisible(false);
         addFlightPanel.setVisible(false);
         confirmFlightEntry.setVisible(false);
         adminInfoPanel.setVisible(false);
         cancelation.setVisible(false);
         flightDetail.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adminusergroup = new javax.swing.ButtonGroup();
        flightTypeGroup = new javax.swing.ButtonGroup();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        searchResIdResultPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        residresult = new javax.swing.JLabel();
        flightidresult = new javax.swing.JLabel();
        airlineresult = new javax.swing.JLabel();
        detimeresult = new javax.swing.JLabel();
        dairportname = new javax.swing.JLabel();
        arrtime = new javax.swing.JLabel();
        arrairport = new javax.swing.JLabel();
        noplb = new javax.swing.JLabel();
        amo = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        passdetail = new javax.swing.JTable();
        backtoHomefromResSearch = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        userInfoPanel = new javax.swing.JPanel();
        infoUserName = new javax.swing.JLabel();
        infoDateOfBirth = new javax.swing.JLabel();
        InfoAddress = new javax.swing.JLabel();
        infoEmail = new javax.swing.JLabel();
        firstNamecCon = new javax.swing.JLabel();
        dateofBirthContainer = new javax.swing.JLabel();
        addressContainer = new javax.swing.JLabel();
        EmailContainer = new javax.swing.JLabel();
        updateuserInfoButton = new javax.swing.JButton();
        userInfotoHome = new javax.swing.JButton();
        lnameCon = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        loginPagePanel = new javax.swing.JPanel();
        Headline = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        pleaseLogin = new javax.swing.JLabel();
        userTextField = new javax.swing.JTextField();
        loginAs = new javax.swing.JLabel();
        adminRadioButton = new javax.swing.JRadioButton();
        userRadioButton = new javax.swing.JRadioButton();
        passTextField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        newUserLabel = new javax.swing.JLabel();
        registerHereButton = new javax.swing.JButton();
        forgotPasswordCheckBox = new javax.swing.JButton();
        loginPageBackground = new javax.swing.JLabel();
        userWelcomePanel = new javax.swing.JPanel();
        welcomeUsernameLabel = new javax.swing.JLabel();
        myAccountUserButton = new javax.swing.JButton();
        logoutUserButton = new javax.swing.JButton();
        showReservationDetailsUserButton = new javax.swing.JButton();
        searchFlightsUserButton = new javax.swing.JButton();
        searchByResIDuser = new javax.swing.JTextField();
        reservationDetailsUserLabel = new javax.swing.JLabel();
        cancelationUserButton = new javax.swing.JButton();
        can = new javax.swing.JLabel();
        cancelResId = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        registrationPanel = new javax.swing.JPanel();
        fillInfoLabel = new javax.swing.JLabel();
        usernameReglb = new javax.swing.JLabel();
        firstNameReglb = new javax.swing.JLabel();
        lastNameReglb = new javax.swing.JLabel();
        dobReglb = new javax.swing.JLabel();
        addressReglb = new javax.swing.JLabel();
        emailReglb = new javax.swing.JLabel();
        chpassReglb = new javax.swing.JLabel();
        conPassReglb = new javax.swing.JLabel();
        userNameRegistertxt = new javax.swing.JTextField();
        firstNameRegisterTxt = new javax.swing.JTextField();
        lastNameRegisterTxt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        addressRegisterTxt = new javax.swing.JTextArea();
        emailRegisterTxt = new javax.swing.JTextField();
        passRegisterTxt = new javax.swing.JPasswordField();
        confirmPassRegTxt = new javax.swing.JPasswordField();
        registerButton = new javax.swing.JButton();
        mandatoryLabel = new javax.swing.JLabel();
        dobChooser = new com.toedter.calendar.JDateChooser();
        jLabel58 = new javax.swing.JLabel();
        searchFlightsPanel = new javax.swing.JPanel();
        searchFlightLabel = new javax.swing.JLabel();
        fromLabel = new javax.swing.JLabel();
        fromComboBox = new javax.swing.JComboBox();
        toLabel = new javax.swing.JLabel();
        toComboBox = new javax.swing.JComboBox();
        departureDateLabel = new javax.swing.JLabel();
        passengersLabel = new javax.swing.JLabel();
        passengerscountTextField = new javax.swing.JTextField();
        classLabel = new javax.swing.JLabel();
        searchFlightsButton = new javax.swing.JButton();
        homeSearchFlightsButton = new javax.swing.JButton();
        classComboBox = new javax.swing.JComboBox();
        departureDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel59 = new javax.swing.JLabel();
        paymentPanel = new javax.swing.JPanel();
        amountDueLabel = new javax.swing.JLabel();
        cardTypelabel = new javax.swing.JLabel();
        cardNumberLabel = new javax.swing.JLabel();
        cardPasswordLabel = new javax.swing.JLabel();
        makePaymentButton = new javax.swing.JButton();
        cardTypeComboBox = new javax.swing.JComboBox();
        cardNumberTextField = new javax.swing.JTextField();
        cardPasswordTextField = new javax.swing.JPasswordField();
        jLabel60 = new javax.swing.JLabel();
        passengerDetailsPanel = new javax.swing.JPanel();
        passengerDetailsLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        passengerDetailsTable = new javax.swing.JTable();
        continueToPaymentButton = new javax.swing.JButton();
        backToTicketSummaryButton = new javax.swing.JButton();
        confirmReservation = new javax.swing.JButton();
        jLabel61 = new javax.swing.JLabel();
        RiviewFlightDetailsPanel = new javax.swing.JPanel();
        reviewFlightDetailsLabel = new javax.swing.JLabel();
        reviewFlightDetailsBackLabel = new javax.swing.JLabel();
        AirlineReviewlb = new javax.swing.JLabel();
        timeRiviewlb = new javax.swing.JLabel();
        dayDateReviewlb = new javax.swing.JLabel();
        sourceReviewlb = new javax.swing.JLabel();
        durationReviewlb = new javax.swing.JLabel();
        ArrivalReviewlb = new javax.swing.JLabel();
        destinationReviewlb = new javax.swing.JLabel();
        flightDetailsBack = new javax.swing.JLabel();
        horizontalLinelb = new javax.swing.JLabel();
        ticketAmountlb = new javax.swing.JLabel();
        amountContainerlb = new javax.swing.JLabel();
        totallb = new javax.swing.JLabel();
        totalContainer = new javax.swing.JLabel();
        ticketBacklb = new javax.swing.JLabel();
        continuelb = new javax.swing.JButton();
        backToSearchlb = new javax.swing.JButton();
        searchResultsPanel = new javax.swing.JPanel();
        searchResultslabel = new javax.swing.JLabel();
        flightInfoJlabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResultTable = new javax.swing.JTable();
        flighIDTextField = new javax.swing.JTextField();
        bookNowButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        homeInSearchResultsButton = new javax.swing.JButton();
        FlightInfoFrom = new javax.swing.JLabel();
        flightInfoto = new javax.swing.JLabel();
        flightinfoday = new javax.swing.JLabel();
        flightinfodate = new javax.swing.JLabel();
        noofflights = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        reservationAdminPanel = new javax.swing.JPanel();
        reservationAdminLabel = new javax.swing.JLabel();
        homeAdminButton = new javax.swing.JButton();
        searchFlightsAdminButton = new javax.swing.JButton();
        bookingsAdminButton = new javax.swing.JButton();
        cancelationAdminButton = new javax.swing.JButton();
        reservationDetailsLabel = new javax.swing.JLabel();
        reservationAdminSearchButton = new javax.swing.JButton();
        reservationAdminTextField = new javax.swing.JTextField();
        adminWelcomePanel = new javax.swing.JPanel();
        welcomeAdminLabel = new javax.swing.JLabel();
        myAccountAdminButton = new javax.swing.JButton();
        logoutAdminButton = new javax.swing.JButton();
        flightDetailsLabel = new javax.swing.JLabel();
        goButton = new javax.swing.JButton();
        flightDetailsTextField = new javax.swing.JTextField();
        addFlightsButton = new javax.swing.JButton();
        reservationAdminButton = new javax.swing.JButton();
        resd = new javax.swing.JLabel();
        res_searchadmin = new javax.swing.JTextField();
        GoresAdmin = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        summaryPanel = new javax.swing.JPanel();
        summayofticketlb = new javax.swing.JLabel();
        thankyoulb = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sumFlightID = new javax.swing.JLabel();
        sumAirlinelb = new javax.swing.JLabel();
        sumDepartslb = new javax.swing.JLabel();
        sumAirportSource = new javax.swing.JLabel();
        sumArrivelb = new javax.swing.JLabel();
        sumAirportArrivelb = new javax.swing.JLabel();
        sumNoofPasslb = new javax.swing.JLabel();
        sumAmountlb = new javax.swing.JLabel();
        summaryBaselb = new javax.swing.JLabel();
        sumHomeButton = new javax.swing.JButton();
        sumLogoutButton = new javax.swing.JButton();
        updateUserInfoPanel = new javax.swing.JPanel();
        updateInfo = new javax.swing.JLabel();
        lname = new javax.swing.JLabel();
        dob = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        firstname = new javax.swing.JLabel();
        fnameupdate = new javax.swing.JTextField();
        lnameupdate = new javax.swing.JTextField();
        dateofbirthupdate = new com.toedter.calendar.JDateChooser();
        jScrollPane4 = new javax.swing.JScrollPane();
        addressupdate = new javax.swing.JTextArea();
        emailupdate = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        oldpasslb = new javax.swing.JLabel();
        newpasslb = new javax.swing.JLabel();
        confirmpasslb = new javax.swing.JLabel();
        oldpass = new javax.swing.JPasswordField();
        newpass = new javax.swing.JPasswordField();
        conpass = new javax.swing.JPasswordField();
        addFlightPanel = new javax.swing.JPanel();
        backtoHomefromaddFlights = new javax.swing.JButton();
        addflightlb = new javax.swing.JLabel();
        flighttypecombo = new javax.swing.JComboBox();
        availcombo = new javax.swing.JComboBox();
        to_eco_seattxt = new javax.swing.JTextField();
        to_busi_seattxt = new javax.swing.JTextField();
        c_eco_s = new javax.swing.JTextField();
        c_b_s = new javax.swing.JTextField();
        airlinestxt = new javax.swing.JTextField();
        sun = new javax.swing.JCheckBox();
        mon = new javax.swing.JCheckBox();
        thu = new javax.swing.JCheckBox();
        fri = new javax.swing.JCheckBox();
        sat = new javax.swing.JCheckBox();
        tue = new javax.swing.JCheckBox();
        wed = new javax.swing.JCheckBox();
        aitcrafttxt = new javax.swing.JTextField();
        addFlightnextstepButton = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        confirmFlightEntry = new javax.swing.JPanel();
        FID = new javax.swing.JLabel();
        frcombo = new javax.swing.JComboBox();
        tocombo = new javax.swing.JComboBox();
        dep = new javax.swing.JTextField();
        arr = new javax.swing.JTextField();
        far = new javax.swing.JTextField();
        confirmAddFlight = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        adminInfoPanel = new javax.swing.JPanel();
        acc = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        passlb = new javax.swing.JLabel();
        adminname = new javax.swing.JLabel();
        adminemail = new javax.swing.JLabel();
        updaeinfo = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        anametxt = new javax.swing.JTextField();
        aemailtxt = new javax.swing.JTextField();
        aoldtxt = new javax.swing.JPasswordField();
        anewtxt = new javax.swing.JPasswordField();
        acontxt = new javax.swing.JPasswordField();
        updateAdminInfo = new javax.swing.JButton();
        backtohomefromadmininfo = new javax.swing.JButton();
        cancelation = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        confirmationmessage = new javax.swing.JLabel();
        confirmCancelation = new javax.swing.JButton();
        backtohomefromcancelation = new javax.swing.JButton();
        fidcon = new javax.swing.JLabel();
        residcon = new javax.swing.JLabel();
        flightDetail = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        fidadmin = new javax.swing.JLabel();
        tyadmin = new javax.swing.JLabel();
        avadmin = new javax.swing.JLabel();
        tesadmin = new javax.swing.JLabel();
        tbsadmin = new javax.swing.JLabel();
        cesadmin = new javax.swing.JLabel();
        cbsadmin = new javax.swing.JLabel();
        airlinesadmin = new javax.swing.JLabel();
        backtohomefromflightdetais = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Airline Booking System");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(null);

        searchResIdResultPanel.setBackground(new java.awt.Color(0, 153, 204));
        searchResIdResultPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        searchResIdResultPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        searchResIdResultPanel.setLayout(null);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Resrvation ID:");
        searchResIdResultPanel.add(jLabel11);
        jLabel11.setBounds(50, 70, 180, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Flight ID:");
        searchResIdResultPanel.add(jLabel12);
        jLabel12.setBounds(50, 110, 180, 30);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Airline:");
        searchResIdResultPanel.add(jLabel13);
        jLabel13.setBounds(50, 160, 180, 30);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Departs At:");
        searchResIdResultPanel.add(jLabel14);
        jLabel14.setBounds(50, 200, 180, 30);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Airport:");
        searchResIdResultPanel.add(jLabel15);
        jLabel15.setBounds(50, 240, 180, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Arrives At:");
        searchResIdResultPanel.add(jLabel16);
        jLabel16.setBounds(50, 280, 180, 30);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Airport:");
        searchResIdResultPanel.add(jLabel17);
        jLabel17.setBounds(50, 310, 180, 30);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("No. of Passenger:");
        searchResIdResultPanel.add(jLabel18);
        jLabel18.setBounds(50, 340, 180, 30);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Total Amount Paid:");
        searchResIdResultPanel.add(jLabel19);
        jLabel19.setBounds(50, 370, 180, 30);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Passenger Details");
        searchResIdResultPanel.add(jLabel20);
        jLabel20.setBounds(330, 420, 210, 30);

        residresult.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        residresult.setText("residresult");
        searchResIdResultPanel.add(residresult);
        residresult.setBounds(260, 70, 480, 30);

        flightidresult.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        flightidresult.setText("flightidresult");
        searchResIdResultPanel.add(flightidresult);
        flightidresult.setBounds(260, 100, 480, 30);

        airlineresult.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        airlineresult.setText("airlineresult");
        searchResIdResultPanel.add(airlineresult);
        airlineresult.setBounds(260, 150, 480, 30);

        detimeresult.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        detimeresult.setText("detimeresult");
        searchResIdResultPanel.add(detimeresult);
        detimeresult.setBounds(260, 200, 480, 30);

        dairportname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dairportname.setText("dairport");
        searchResIdResultPanel.add(dairportname);
        dairportname.setBounds(260, 240, 480, 30);

        arrtime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        arrtime.setText("arrtime");
        searchResIdResultPanel.add(arrtime);
        arrtime.setBounds(260, 280, 480, 30);

        arrairport.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        arrairport.setText("arrairport");
        searchResIdResultPanel.add(arrairport);
        arrairport.setBounds(260, 310, 480, 30);

        noplb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        noplb.setText("nop");
        searchResIdResultPanel.add(noplb);
        noplb.setBounds(260, 340, 480, 30);

        amo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        amo.setText("amo");
        searchResIdResultPanel.add(amo);
        amo.setBounds(260, 370, 480, 30);

        passdetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Seat_Number", "Class", "ID_Type", "ID_Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        passdetail.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(passdetail);
        if (passdetail.getColumnModel().getColumnCount() > 0) {
            passdetail.getColumnModel().getColumn(0).setResizable(false);
            passdetail.getColumnModel().getColumn(1).setResizable(false);
            passdetail.getColumnModel().getColumn(2).setResizable(false);
            passdetail.getColumnModel().getColumn(3).setResizable(false);
            passdetail.getColumnModel().getColumn(4).setResizable(false);
        }

        searchResIdResultPanel.add(jScrollPane6);
        jScrollPane6.setBounds(30, 460, 730, 120);

        backtoHomefromResSearch.setText("Home");
        backtoHomefromResSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtoHomefromResSearchActionPerformed(evt);
            }
        });
        searchResIdResultPanel.add(backtoHomefromResSearch);
        backtoHomefromResSearch.setBounds(600, 30, 130, 40);

        jLabel55.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\back.jpg")); // NOI18N
        searchResIdResultPanel.add(jLabel55);
        jLabel55.setBounds(0, 0, 800, 600);

        getContentPane().add(searchResIdResultPanel);
        searchResIdResultPanel.setBounds(0, 0, 800, 600);

        userInfoPanel.setBackground(new java.awt.Color(0, 153, 204));
        userInfoPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        userInfoPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        userInfoPanel.setLayout(null);

        infoUserName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        infoUserName.setText("Name :");
        userInfoPanel.add(infoUserName);
        infoUserName.setBounds(90, 100, 150, 30);

        infoDateOfBirth.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        infoDateOfBirth.setText("Date of Birth:");
        userInfoPanel.add(infoDateOfBirth);
        infoDateOfBirth.setBounds(90, 170, 130, 30);

        InfoAddress.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        InfoAddress.setText("Address:");
        userInfoPanel.add(InfoAddress);
        InfoAddress.setBounds(90, 250, 140, 50);

        infoEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        infoEmail.setText("Email-ID:");
        userInfoPanel.add(infoEmail);
        infoEmail.setBounds(90, 320, 170, 50);

        firstNamecCon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        firstNamecCon.setText("fname");
        userInfoPanel.add(firstNamecCon);
        firstNamecCon.setBounds(240, 110, 120, 30);

        dateofBirthContainer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dateofBirthContainer.setText("dob");
        userInfoPanel.add(dateofBirthContainer);
        dateofBirthContainer.setBounds(240, 170, 450, 30);

        addressContainer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addressContainer.setText("address");
        userInfoPanel.add(addressContainer);
        addressContainer.setBounds(240, 260, 500, 30);

        EmailContainer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EmailContainer.setText("email");
        userInfoPanel.add(EmailContainer);
        EmailContainer.setBounds(240, 330, 470, 30);

        updateuserInfoButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateuserInfoButton.setText("Update Information");
        updateuserInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateuserInfoButtonActionPerformed(evt);
            }
        });
        userInfoPanel.add(updateuserInfoButton);
        updateuserInfoButton.setBounds(330, 410, 190, 30);

        userInfotoHome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        userInfotoHome.setText("Home");
        userInfotoHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userInfotoHomeActionPerformed(evt);
            }
        });
        userInfoPanel.add(userInfotoHome);
        userInfotoHome.setBounds(580, 30, 150, 30);

        lnameCon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lnameCon.setText("lname");
        userInfoPanel.add(lnameCon);
        lnameCon.setBounds(360, 110, 200, 30);

        jLabel56.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\back.jpg")); // NOI18N
        jLabel56.setText("jLabel56");
        userInfoPanel.add(jLabel56);
        jLabel56.setBounds(0, 0, 800, 600);

        getContentPane().add(userInfoPanel);
        userInfoPanel.setBounds(0, 0, 800, 600);

        loginPagePanel.setPreferredSize(new java.awt.Dimension(800, 600));
        loginPagePanel.setLayout(null);

        Headline.setFont(new java.awt.Font("Vani", 1, 24)); // NOI18N
        Headline.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Headline.setText("Welcome to Airline Booking System");
        loginPagePanel.add(Headline);
        Headline.setBounds(80, 20, 620, 40);

        usernameLabel.setFont(new java.awt.Font("Vani", 1, 24)); // NOI18N
        usernameLabel.setText("Username:");
        loginPagePanel.add(usernameLabel);
        usernameLabel.setBounds(400, 340, 136, 40);

        passwordLabel.setFont(new java.awt.Font("Vani", 1, 24)); // NOI18N
        passwordLabel.setText("Password:");
        loginPagePanel.add(passwordLabel);
        passwordLabel.setBounds(400, 370, 130, 50);

        pleaseLogin.setFont(new java.awt.Font("Vani", 1, 24)); // NOI18N
        pleaseLogin.setText("Please Login...");
        loginPagePanel.add(pleaseLogin);
        pleaseLogin.setBounds(550, 280, 250, 40);

        userTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTextFieldActionPerformed(evt);
            }
        });
        loginPagePanel.add(userTextField);
        userTextField.setBounds(550, 340, 220, 30);

        loginAs.setFont(new java.awt.Font("Vani", 1, 18)); // NOI18N
        loginAs.setText("Login As:");
        loginPagePanel.add(loginAs);
        loginAs.setBounds(410, 460, 90, 30);

        adminusergroup.add(adminRadioButton);
        adminRadioButton.setFont(new java.awt.Font("Vani", 1, 12)); // NOI18N
        adminRadioButton.setText("Administrator");
        loginPagePanel.add(adminRadioButton);
        adminRadioButton.setBounds(550, 460, 140, 29);

        adminusergroup.add(userRadioButton);
        userRadioButton.setFont(new java.awt.Font("Vani", 1, 12)); // NOI18N
        userRadioButton.setText("User");
        userRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userRadioButtonActionPerformed(evt);
            }
        });
        loginPagePanel.add(userRadioButton);
        userRadioButton.setBounds(690, 460, 80, 29);
        loginPagePanel.add(passTextField);
        passTextField.setBounds(550, 380, 220, 30);

        loginButton.setFont(new java.awt.Font("Vani", 1, 18)); // NOI18N
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        loginPagePanel.add(loginButton);
        loginButton.setBounds(550, 510, 220, 40);

        newUserLabel.setFont(new java.awt.Font("Vani", 0, 18)); // NOI18N
        newUserLabel.setText("New Users:");
        loginPagePanel.add(newUserLabel);
        newUserLabel.setBounds(80, 510, 100, 40);

        registerHereButton.setFont(new java.awt.Font("Vani", 0, 18)); // NOI18N
        registerHereButton.setText("Register Here");
        registerHereButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerHereButtonActionPerformed(evt);
            }
        });
        loginPagePanel.add(registerHereButton);
        registerHereButton.setBounds(180, 510, 150, 40);

        forgotPasswordCheckBox.setText("Forgot Password");
        forgotPasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgotPasswordCheckBoxActionPerformed(evt);
            }
        });
        loginPagePanel.add(forgotPasswordCheckBox);
        forgotPasswordCheckBox.setBounds(550, 420, 130, 23);

        loginPageBackground.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\frontpagebackground.jpg")); // NOI18N
        loginPageBackground.setText("Please Login to Proceed...");
        loginPageBackground.setAlignmentY(0.0F);
        loginPageBackground.setMinimumSize(new java.awt.Dimension(800, 600));
        loginPageBackground.setName(""); // NOI18N
        loginPageBackground.setPreferredSize(new java.awt.Dimension(800, 600));
        loginPagePanel.add(loginPageBackground);
        loginPageBackground.setBounds(0, 0, 800, 600);

        getContentPane().add(loginPagePanel);
        loginPagePanel.setBounds(0, 0, 800, 600);

        userWelcomePanel.setBackground(new java.awt.Color(0, 153, 204));
        userWelcomePanel.setMinimumSize(new java.awt.Dimension(800, 600));
        userWelcomePanel.setLayout(null);

        welcomeUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        welcomeUsernameLabel.setText("Welcome username");
        userWelcomePanel.add(welcomeUsernameLabel);
        welcomeUsernameLabel.setBounds(70, 50, 170, 40);

        myAccountUserButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        myAccountUserButton.setText("My Account");
        myAccountUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myAccountUserButtonActionPerformed(evt);
            }
        });
        userWelcomePanel.add(myAccountUserButton);
        myAccountUserButton.setBounds(470, 40, 130, 40);

        logoutUserButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        logoutUserButton.setText("Logout");
        logoutUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutUserButtonActionPerformed(evt);
            }
        });
        userWelcomePanel.add(logoutUserButton);
        logoutUserButton.setBounds(630, 40, 120, 40);

        showReservationDetailsUserButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        showReservationDetailsUserButton.setText("Go");
        showReservationDetailsUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showReservationDetailsUserButtonActionPerformed(evt);
            }
        });
        userWelcomePanel.add(showReservationDetailsUserButton);
        showReservationDetailsUserButton.setBounds(400, 150, 100, 40);

        searchFlightsUserButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchFlightsUserButton.setText("Search Flights");
        searchFlightsUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFlightsUserButtonActionPerformed(evt);
            }
        });
        userWelcomePanel.add(searchFlightsUserButton);
        searchFlightsUserButton.setBounds(190, 220, 200, 40);

        searchByResIDuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByResIDuserActionPerformed(evt);
            }
        });
        userWelcomePanel.add(searchByResIDuser);
        searchByResIDuser.setBounds(190, 150, 200, 40);

        reservationDetailsUserLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        reservationDetailsUserLabel.setText("Reservation Details:");
        userWelcomePanel.add(reservationDetailsUserLabel);
        reservationDetailsUserLabel.setBounds(20, 150, 160, 40);

        cancelationUserButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cancelationUserButton.setText("Cancelation");
        cancelationUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelationUserButtonActionPerformed(evt);
            }
        });
        userWelcomePanel.add(cancelationUserButton);
        cancelationUserButton.setBounds(410, 300, 130, 40);

        can.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        can.setText("Cancel Booking :");
        userWelcomePanel.add(can);
        can.setBounds(20, 290, 150, 50);
        userWelcomePanel.add(cancelResId);
        cancelResId.setBounds(190, 300, 200, 40);

        jLabel57.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\back.jpg")); // NOI18N
        jLabel57.setText("jLabel57");
        userWelcomePanel.add(jLabel57);
        jLabel57.setBounds(0, 4, 800, 600);

        getContentPane().add(userWelcomePanel);
        userWelcomePanel.setBounds(0, 0, 800, 600);

        registrationPanel.setBackground(new java.awt.Color(0, 153, 204));
        registrationPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        registrationPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        registrationPanel.setLayout(null);

        fillInfoLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        fillInfoLabel.setText("Please Fill the Follwing Information");
        registrationPanel.add(fillInfoLabel);
        fillInfoLabel.setBounds(170, 10, 410, 60);

        usernameReglb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        usernameReglb.setText("Username : ");
        registrationPanel.add(usernameReglb);
        usernameReglb.setBounds(80, 90, 170, 30);

        firstNameReglb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        firstNameReglb.setText("First Name  :");
        registrationPanel.add(firstNameReglb);
        firstNameReglb.setBounds(80, 130, 170, 30);

        lastNameReglb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lastNameReglb.setText("Last Name :");
        registrationPanel.add(lastNameReglb);
        lastNameReglb.setBounds(80, 170, 170, 30);

        dobReglb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dobReglb.setText("Date of Birth :");
        registrationPanel.add(dobReglb);
        dobReglb.setBounds(80, 210, 170, 30);

        addressReglb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addressReglb.setText("Address :");
        registrationPanel.add(addressReglb);
        addressReglb.setBounds(80, 270, 170, 30);

        emailReglb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        emailReglb.setText("Email :");
        registrationPanel.add(emailReglb);
        emailReglb.setBounds(80, 360, 170, 30);

        chpassReglb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chpassReglb.setText("Choose Password :");
        registrationPanel.add(chpassReglb);
        chpassReglb.setBounds(80, 400, 170, 30);

        conPassReglb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        conPassReglb.setText("Confirm Password :");
        registrationPanel.add(conPassReglb);
        conPassReglb.setBounds(80, 440, 180, 30);

        userNameRegistertxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameRegistertxtActionPerformed(evt);
            }
        });
        registrationPanel.add(userNameRegistertxt);
        userNameRegistertxt.setBounds(290, 90, 170, 30);
        registrationPanel.add(firstNameRegisterTxt);
        firstNameRegisterTxt.setBounds(290, 130, 170, 30);
        registrationPanel.add(lastNameRegisterTxt);
        lastNameRegisterTxt.setBounds(290, 170, 170, 30);

        addressRegisterTxt.setColumns(20);
        addressRegisterTxt.setRows(5);
        jScrollPane3.setViewportView(addressRegisterTxt);

        registrationPanel.add(jScrollPane3);
        jScrollPane3.setBounds(290, 270, 170, 70);
        registrationPanel.add(emailRegisterTxt);
        emailRegisterTxt.setBounds(290, 360, 170, 30);
        registrationPanel.add(passRegisterTxt);
        passRegisterTxt.setBounds(290, 400, 170, 30);
        registrationPanel.add(confirmPassRegTxt);
        confirmPassRegTxt.setBounds(290, 440, 170, 30);

        registerButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        registrationPanel.add(registerButton);
        registerButton.setBounds(290, 490, 170, 40);

        mandatoryLabel.setText("All Fields Are Mandatory.");
        registrationPanel.add(mandatoryLabel);
        mandatoryLabel.setBounds(510, 450, 270, 14);
        registrationPanel.add(dobChooser);
        dobChooser.setBounds(290, 210, 170, 30);

        jLabel58.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\back.jpg")); // NOI18N
        jLabel58.setText("jLabel58");
        registrationPanel.add(jLabel58);
        jLabel58.setBounds(0, 0, 800, 600);

        getContentPane().add(registrationPanel);
        registrationPanel.setBounds(0, 0, 800, 600);

        searchFlightsPanel.setBackground(new java.awt.Color(0, 153, 204));
        searchFlightsPanel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchFlightsPanel.setLayout(null);

        searchFlightLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        searchFlightLabel.setText("Search Flights");
        searchFlightsPanel.add(searchFlightLabel);
        searchFlightLabel.setBounds(340, 30, 170, 30);

        fromLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        fromLabel.setText("From");
        searchFlightsPanel.add(fromLabel);
        fromLabel.setBounds(70, 190, 90, 40);

        fromComboBox.setAlignmentX(0.0F);
        fromComboBox.setAlignmentY(0.0F);
        fromComboBox.setPreferredSize(new java.awt.Dimension(190, 40));
        fromComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fromComboBoxMouseEntered(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fromComboBoxMouseClicked(evt);
            }
        });
        fromComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromComboBoxActionPerformed(evt);
            }
        });
        fromComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fromComboBoxKeyPressed(evt);
            }
        });
        searchFlightsPanel.add(fromComboBox);
        fromComboBox.setBounds(70, 230, 190, 40);
        fromComboBox.getAccessibleContext().setAccessibleName("");

        toLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        toLabel.setText("To");
        searchFlightsPanel.add(toLabel);
        toLabel.setBounds(330, 200, 70, 30);

        toComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toComboBoxMouseEntered(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toComboBoxMouseClicked(evt);
            }
        });
        searchFlightsPanel.add(toComboBox);
        toComboBox.setBounds(330, 230, 190, 40);

        departureDateLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        departureDateLabel.setText("Departure Date");
        searchFlightsPanel.add(departureDateLabel);
        departureDateLabel.setBounds(70, 280, 130, 40);

        passengersLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passengersLabel.setText("Passengers");
        searchFlightsPanel.add(passengersLabel);
        passengersLabel.setBounds(330, 280, 120, 40);
        searchFlightsPanel.add(passengerscountTextField);
        passengerscountTextField.setBounds(330, 320, 190, 40);

        classLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        classLabel.setText("Class");
        searchFlightsPanel.add(classLabel);
        classLabel.setBounds(610, 280, 80, 40);

        searchFlightsButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchFlightsButton.setText("Search Flights");
        searchFlightsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFlightsButtonActionPerformed(evt);
            }
        });
        searchFlightsPanel.add(searchFlightsButton);
        searchFlightsButton.setBounds(330, 400, 190, 30);

        homeSearchFlightsButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        homeSearchFlightsButton.setText("Home");
        homeSearchFlightsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeSearchFlightsButtonActionPerformed(evt);
            }
        });
        searchFlightsPanel.add(homeSearchFlightsButton);
        homeSearchFlightsButton.setBounds(570, 90, 130, 40);

        classComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Business", "Economy" }));
        searchFlightsPanel.add(classComboBox);
        classComboBox.setBounds(610, 320, 150, 40);
        searchFlightsPanel.add(departureDateChooser);
        departureDateChooser.setBounds(70, 320, 200, 40);

        jLabel59.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\back.jpg")); // NOI18N
        jLabel59.setText("jLabel59");
        searchFlightsPanel.add(jLabel59);
        jLabel59.setBounds(0, 4, 800, 590);

        getContentPane().add(searchFlightsPanel);
        searchFlightsPanel.setBounds(0, 0, 800, 600);

        paymentPanel.setBackground(new java.awt.Color(0, 153, 204));
        paymentPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        paymentPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        paymentPanel.setLayout(null);

        amountDueLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        amountDueLabel.setText("Amount Due: 0000.00");
        paymentPanel.add(amountDueLabel);
        amountDueLabel.setBounds(50, 70, 210, 50);

        cardTypelabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cardTypelabel.setText("Card Type");
        paymentPanel.add(cardTypelabel);
        cardTypelabel.setBounds(60, 160, 110, 40);

        cardNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cardNumberLabel.setText("Card Number");
        paymentPanel.add(cardNumberLabel);
        cardNumberLabel.setBounds(60, 220, 110, 40);

        cardPasswordLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cardPasswordLabel.setText("Password");
        paymentPanel.add(cardPasswordLabel);
        cardPasswordLabel.setBounds(60, 290, 110, 40);

        makePaymentButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        makePaymentButton.setText("MakePayment");
        makePaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePaymentButtonActionPerformed(evt);
            }
        });
        paymentPanel.add(makePaymentButton);
        makePaymentButton.setBounds(330, 430, 180, 50);

        cardTypeComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cardTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Credit Card", "Master Card", "Maestro", "VISA" }));
        paymentPanel.add(cardTypeComboBox);
        cardTypeComboBox.setBounds(220, 170, 180, 40);

        cardNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardNumberTextFieldActionPerformed(evt);
            }
        });
        paymentPanel.add(cardNumberTextField);
        cardNumberTextField.setBounds(220, 230, 180, 30);
        paymentPanel.add(cardPasswordTextField);
        cardPasswordTextField.setBounds(220, 290, 180, 30);

        jLabel60.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\back.jpg")); // NOI18N
        jLabel60.setText("jLabel60");
        paymentPanel.add(jLabel60);
        jLabel60.setBounds(0, 0, 800, 600);

        getContentPane().add(paymentPanel);
        paymentPanel.setBounds(0, 0, 800, 600);

        passengerDetailsPanel.setBackground(new java.awt.Color(0, 153, 204));
        passengerDetailsPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        passengerDetailsPanel.setVerifyInputWhenFocusTarget(false);
        passengerDetailsPanel.setLayout(null);

        passengerDetailsLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        passengerDetailsLabel.setText("Passenger Details");
        passengerDetailsPanel.add(passengerDetailsLabel);
        passengerDetailsLabel.setBounds(300, 40, 260, 40);

        passengerDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Date of Birth", "Address", "Email", "ID Type", "ID Number"
            }
        ));
        passengerDetailsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(passengerDetailsTable);
        if (passengerDetailsTable.getColumnModel().getColumnCount() > 0) {
            passengerDetailsTable.getColumnModel().getColumn(0).setResizable(false);
            passengerDetailsTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            passengerDetailsTable.getColumnModel().getColumn(1).setResizable(false);
            passengerDetailsTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            passengerDetailsTable.getColumnModel().getColumn(2).setResizable(false);
            passengerDetailsTable.getColumnModel().getColumn(2).setPreferredWidth(30);
            passengerDetailsTable.getColumnModel().getColumn(3).setResizable(false);
            passengerDetailsTable.getColumnModel().getColumn(4).setResizable(false);
            passengerDetailsTable.getColumnModel().getColumn(5).setResizable(false);
            passengerDetailsTable.getColumnModel().getColumn(6).setResizable(false);
        }
        passengerDetailsTable.setRowHeight(30);

        passengerDetailsPanel.add(jScrollPane2);
        jScrollPane2.setBounds(20, 100, 730, 250);

        continueToPaymentButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        continueToPaymentButton.setText("Continue To Payment");
        continueToPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueToPaymentButtonActionPerformed(evt);
            }
        });
        passengerDetailsPanel.add(continueToPaymentButton);
        continueToPaymentButton.setBounds(270, 380, 250, 40);

        backToTicketSummaryButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backToTicketSummaryButton.setText("Back");
        passengerDetailsPanel.add(backToTicketSummaryButton);
        backToTicketSummaryButton.setBounds(20, 420, 90, 40);

        confirmReservation.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        confirmReservation.setText("Confirm Reservation");
        confirmReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmReservationActionPerformed(evt);
            }
        });
        passengerDetailsPanel.add(confirmReservation);
        confirmReservation.setBounds(270, 420, 250, 40);

        jLabel61.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\back.jpg")); // NOI18N
        jLabel61.setText("jLabel61");
        passengerDetailsPanel.add(jLabel61);
        jLabel61.setBounds(0, 0, 800, 600);

        getContentPane().add(passengerDetailsPanel);
        passengerDetailsPanel.setBounds(0, 0, 800, 600);

        RiviewFlightDetailsPanel.setBackground(new java.awt.Color(0, 153, 204));
        RiviewFlightDetailsPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        RiviewFlightDetailsPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        RiviewFlightDetailsPanel.setLayout(null);

        reviewFlightDetailsLabel.setBackground(new java.awt.Color(0, 0, 204));
        reviewFlightDetailsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        reviewFlightDetailsLabel.setForeground(new java.awt.Color(255, 255, 255));
        reviewFlightDetailsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reviewFlightDetailsLabel.setText("Review Flight Details");
        reviewFlightDetailsLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        RiviewFlightDetailsPanel.add(reviewFlightDetailsLabel);
        reviewFlightDetailsLabel.setBounds(140, 20, 540, 60);

        reviewFlightDetailsBackLabel.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\background.jpg")); // NOI18N
        RiviewFlightDetailsPanel.add(reviewFlightDetailsBackLabel);
        reviewFlightDetailsBackLabel.setBounds(140, 20, 540, 60);

        AirlineReviewlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AirlineReviewlb.setForeground(new java.awt.Color(255, 255, 255));
        AirlineReviewlb.setText("Airline");
        RiviewFlightDetailsPanel.add(AirlineReviewlb);
        AirlineReviewlb.setBounds(30, 150, 70, 50);

        timeRiviewlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        timeRiviewlb.setForeground(new java.awt.Color(255, 255, 255));
        timeRiviewlb.setText("time");
        RiviewFlightDetailsPanel.add(timeRiviewlb);
        timeRiviewlb.setBounds(130, 160, 110, 20);

        dayDateReviewlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dayDateReviewlb.setForeground(new java.awt.Color(255, 255, 255));
        dayDateReviewlb.setText("day,date");
        RiviewFlightDetailsPanel.add(dayDateReviewlb);
        dayDateReviewlb.setBounds(120, 190, 170, 20);

        sourceReviewlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sourceReviewlb.setForeground(new java.awt.Color(255, 255, 255));
        sourceReviewlb.setText("Source");
        RiviewFlightDetailsPanel.add(sourceReviewlb);
        sourceReviewlb.setBounds(280, 160, 110, 50);

        durationReviewlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        durationReviewlb.setForeground(new java.awt.Color(255, 255, 255));
        durationReviewlb.setText("------>");
        RiviewFlightDetailsPanel.add(durationReviewlb);
        durationReviewlb.setBounds(390, 150, 100, 60);

        ArrivalReviewlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ArrivalReviewlb.setForeground(new java.awt.Color(255, 255, 255));
        ArrivalReviewlb.setText("timeofarrival");
        RiviewFlightDetailsPanel.add(ArrivalReviewlb);
        ArrivalReviewlb.setBounds(530, 150, 110, 60);

        destinationReviewlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        destinationReviewlb.setForeground(new java.awt.Color(255, 255, 255));
        destinationReviewlb.setText("Destination");
        RiviewFlightDetailsPanel.add(destinationReviewlb);
        destinationReviewlb.setBounds(650, 150, 110, 60);

        flightDetailsBack.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\background.jpg")); // NOI18N
        RiviewFlightDetailsPanel.add(flightDetailsBack);
        flightDetailsBack.setBounds(30, 140, 730, 80);

        horizontalLinelb.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        horizontalLinelb.setForeground(new java.awt.Color(255, 255, 255));
        horizontalLinelb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        horizontalLinelb.setText("_________________________");
        RiviewFlightDetailsPanel.add(horizontalLinelb);
        horizontalLinelb.setBounds(0, 370, 440, 30);

        ticketAmountlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ticketAmountlb.setForeground(new java.awt.Color(255, 255, 255));
        ticketAmountlb.setText("Amount Per Passenger :");
        RiviewFlightDetailsPanel.add(ticketAmountlb);
        ticketAmountlb.setBounds(60, 300, 240, 50);

        amountContainerlb.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        amountContainerlb.setForeground(new java.awt.Color(255, 255, 255));
        amountContainerlb.setText("00000.00");
        RiviewFlightDetailsPanel.add(amountContainerlb);
        amountContainerlb.setBounds(270, 300, 130, 50);

        totallb.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        totallb.setForeground(new java.awt.Color(255, 255, 255));
        totallb.setText("Total : ");
        RiviewFlightDetailsPanel.add(totallb);
        totallb.setBounds(60, 430, 110, 40);

        totalContainer.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        totalContainer.setForeground(new java.awt.Color(255, 255, 255));
        totalContainer.setText("000000.00");
        RiviewFlightDetailsPanel.add(totalContainer);
        totalContainer.setBounds(230, 420, 150, 60);

        ticketBacklb.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\tickectamount.jpg")); // NOI18N
        RiviewFlightDetailsPanel.add(ticketBacklb);
        ticketBacklb.setBounds(30, 270, 380, 250);

        continuelb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        continuelb.setText("Continue");
        continuelb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuelbActionPerformed(evt);
            }
        });
        RiviewFlightDetailsPanel.add(continuelb);
        continuelb.setBounds(550, 340, 170, 40);

        backToSearchlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backToSearchlb.setText("Back to Search Results");
        backToSearchlb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToSearchlbActionPerformed(evt);
            }
        });
        RiviewFlightDetailsPanel.add(backToSearchlb);
        backToSearchlb.setBounds(490, 410, 270, 40);

        getContentPane().add(RiviewFlightDetailsPanel);
        RiviewFlightDetailsPanel.setBounds(0, 0, 800, 600);

        searchResultsPanel.setBackground(new java.awt.Color(0, 153, 204));
        searchResultsPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        searchResultsPanel.setRequestFocusEnabled(false);
        searchResultsPanel.setLayout(null);

        searchResultslabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchResultslabel.setText("Search Results");
        searchResultsPanel.add(searchResultslabel);
        searchResultslabel.setBounds(330, 20, 160, 40);

        flightInfoJlabel.setBackground(new java.awt.Color(0, 0, 0));
        flightInfoJlabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        flightInfoJlabel.setForeground(new java.awt.Color(255, 255, 255));
        flightInfoJlabel.setText("                                 to                              |               ,                                                              flights found");
        searchResultsPanel.add(flightInfoJlabel);
        flightInfoJlabel.setBounds(40, 80, 730, 50);

        searchResultTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight ID", "Departs", "Arrives", "Fare", "Airline"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchResultTable.getTableHeader().setReorderingAllowed(false);
        searchResultTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchResultTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(searchResultTable);
        if (searchResultTable.getColumnModel().getColumnCount() > 0) {
            searchResultTable.getColumnModel().getColumn(0).setResizable(false);
            searchResultTable.getColumnModel().getColumn(1).setResizable(false);
            searchResultTable.getColumnModel().getColumn(2).setResizable(false);
            searchResultTable.getColumnModel().getColumn(3).setResizable(false);
            searchResultTable.getColumnModel().getColumn(4).setResizable(false);
        }
        searchResultTable.setRowHeight(40);

        searchResultsPanel.add(jScrollPane1);
        jScrollPane1.setBounds(30, 130, 730, 350);

        flighIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flighIDTextFieldActionPerformed(evt);
            }
        });
        searchResultsPanel.add(flighIDTextField);
        flighIDTextField.setBounds(340, 510, 210, 30);

        bookNowButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bookNowButton.setText("Book Now");
        bookNowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNowButtonActionPerformed(evt);
            }
        });
        searchResultsPanel.add(bookNowButton);
        bookNowButton.setBounds(630, 510, 130, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Flight ID :");
        searchResultsPanel.add(jLabel2);
        jLabel2.setBounds(210, 510, 100, 30);

        homeInSearchResultsButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        homeInSearchResultsButton.setText("Home");
        homeInSearchResultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeInSearchResultsButtonActionPerformed(evt);
            }
        });
        searchResultsPanel.add(homeInSearchResultsButton);
        homeInSearchResultsButton.setBounds(620, 30, 110, 40);

        FlightInfoFrom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        FlightInfoFrom.setForeground(new java.awt.Color(255, 255, 255));
        FlightInfoFrom.setText("FlightInfoFrom");
        searchResultsPanel.add(FlightInfoFrom);
        FlightInfoFrom.setBounds(30, 90, 170, 40);

        flightInfoto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        flightInfoto.setForeground(new java.awt.Color(255, 255, 255));
        flightInfoto.setText("tolabel");
        searchResultsPanel.add(flightInfoto);
        flightInfoto.setBounds(210, 90, 130, 40);

        flightinfoday.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        flightinfoday.setForeground(new java.awt.Color(255, 255, 255));
        flightinfoday.setText("jLabel11");
        searchResultsPanel.add(flightinfoday);
        flightinfoday.setBounds(320, 90, 70, 40);

        flightinfodate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        flightinfodate.setForeground(new java.awt.Color(255, 255, 255));
        flightinfodate.setText("jLabel11");
        searchResultsPanel.add(flightinfodate);
        flightinfodate.setBounds(380, 90, 150, 40);

        noofflights.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        noofflights.setForeground(new java.awt.Color(255, 255, 255));
        noofflights.setText("jLabel11");
        searchResultsPanel.add(noofflights);
        noofflights.setBounds(590, 90, 160, 40);

        jLabel54.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\back.jpg")); // NOI18N
        searchResultsPanel.add(jLabel54);
        jLabel54.setBounds(0, 0, 800, 600);

        getContentPane().add(searchResultsPanel);
        searchResultsPanel.setBounds(0, 0, 800, 600);

        reservationAdminPanel.setBackground(new java.awt.Color(0, 153, 204));
        reservationAdminPanel.setLayout(null);

        reservationAdminLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        reservationAdminLabel.setText("Reservation");
        reservationAdminPanel.add(reservationAdminLabel);
        reservationAdminLabel.setBounds(320, 30, 180, 40);

        homeAdminButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        homeAdminButton.setText("Home");
        reservationAdminPanel.add(homeAdminButton);
        homeAdminButton.setBounds(580, 90, 140, 40);

        searchFlightsAdminButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchFlightsAdminButton.setText("Search Flights");
        reservationAdminPanel.add(searchFlightsAdminButton);
        searchFlightsAdminButton.setBounds(200, 150, 180, 40);

        bookingsAdminButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bookingsAdminButton.setText("Bookings");
        reservationAdminPanel.add(bookingsAdminButton);
        bookingsAdminButton.setBounds(200, 210, 180, 40);

        cancelationAdminButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cancelationAdminButton.setText("Cancelation");
        reservationAdminPanel.add(cancelationAdminButton);
        cancelationAdminButton.setBounds(200, 270, 180, 40);

        reservationDetailsLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        reservationDetailsLabel.setText("Reservation Details");
        reservationAdminPanel.add(reservationDetailsLabel);
        reservationDetailsLabel.setBounds(20, 320, 160, 50);

        reservationAdminSearchButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        reservationAdminSearchButton.setText("Go");
        reservationAdminPanel.add(reservationAdminSearchButton);
        reservationAdminSearchButton.setBounds(430, 330, 180, 40);
        reservationAdminPanel.add(reservationAdminTextField);
        reservationAdminTextField.setBounds(200, 330, 180, 40);

        getContentPane().add(reservationAdminPanel);
        reservationAdminPanel.setBounds(0, 0, 800, 600);

        adminWelcomePanel.setBackground(new java.awt.Color(0, 153, 204));
        adminWelcomePanel.setLayout(null);

        welcomeAdminLabel.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        welcomeAdminLabel.setText("Welcome first name admin");
        adminWelcomePanel.add(welcomeAdminLabel);
        welcomeAdminLabel.setBounds(40, 40, 350, 40);

        myAccountAdminButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        myAccountAdminButton.setText("My Account");
        myAccountAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myAccountAdminButtonActionPerformed(evt);
            }
        });
        adminWelcomePanel.add(myAccountAdminButton);
        myAccountAdminButton.setBounds(440, 40, 130, 40);

        logoutAdminButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        logoutAdminButton.setText("Logout");
        logoutAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutAdminButtonActionPerformed(evt);
            }
        });
        adminWelcomePanel.add(logoutAdminButton);
        logoutAdminButton.setBounds(590, 40, 130, 40);

        flightDetailsLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        flightDetailsLabel.setText("Flight Details");
        adminWelcomePanel.add(flightDetailsLabel);
        flightDetailsLabel.setBounds(70, 180, 120, 40);

        goButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        goButton.setText("Go");
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });
        adminWelcomePanel.add(goButton);
        goButton.setBounds(420, 180, 90, 40);

        flightDetailsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightDetailsTextFieldActionPerformed(evt);
            }
        });
        adminWelcomePanel.add(flightDetailsTextField);
        flightDetailsTextField.setBounds(190, 180, 200, 40);

        addFlightsButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addFlightsButton.setText("Add Flights");
        addFlightsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightsButtonActionPerformed(evt);
            }
        });
        adminWelcomePanel.add(addFlightsButton);
        addFlightsButton.setBounds(190, 240, 200, 40);

        reservationAdminButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        reservationAdminButton.setText("Reservation");
        reservationAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationAdminButtonActionPerformed(evt);
            }
        });
        adminWelcomePanel.add(reservationAdminButton);
        reservationAdminButton.setBounds(190, 310, 200, 40);

        resd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resd.setText("Reservation Details");
        adminWelcomePanel.add(resd);
        resd.setBounds(10, 110, 170, 30);
        adminWelcomePanel.add(res_searchadmin);
        res_searchadmin.setBounds(190, 120, 200, 40);

        GoresAdmin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GoresAdmin.setText("Go");
        GoresAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoresAdminActionPerformed(evt);
            }
        });
        adminWelcomePanel.add(GoresAdmin);
        GoresAdmin.setBounds(420, 120, 90, 40);

        jLabel62.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\back.jpg")); // NOI18N
        jLabel62.setText("jLabel62");
        adminWelcomePanel.add(jLabel62);
        jLabel62.setBounds(0, 0, 800, 600);

        getContentPane().add(adminWelcomePanel);
        adminWelcomePanel.setBounds(0, 0, 800, 600);

        summaryPanel.setBackground(new java.awt.Color(0, 153, 204));
        summaryPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        summaryPanel.setLayout(null);

        summayofticketlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        summayofticketlb.setForeground(new java.awt.Color(255, 255, 255));
        summayofticketlb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        summayofticketlb.setText("Summay of Booking");
        summaryPanel.add(summayofticketlb);
        summayofticketlb.setBounds(210, 120, 350, 50);

        thankyoulb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        thankyoulb.setText("You Have Successfully Booked Your Ticket");
        summaryPanel.add(thankyoulb);
        thankyoulb.setBounds(220, 40, 370, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Flight ID:");
        summaryPanel.add(jLabel1);
        jLabel1.setBounds(130, 190, 70, 20);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Airline:");
        summaryPanel.add(jLabel3);
        jLabel3.setBounds(130, 220, 100, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Departs At :");
        summaryPanel.add(jLabel4);
        jLabel4.setBounds(130, 250, 100, 17);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Arrives At :");
        summaryPanel.add(jLabel5);
        jLabel5.setBounds(130, 300, 110, 20);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Airport:");
        summaryPanel.add(jLabel6);
        jLabel6.setBounds(130, 270, 100, 20);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Airport:");
        summaryPanel.add(jLabel7);
        jLabel7.setBounds(130, 320, 80, 20);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("No. of Passengers:");
        summaryPanel.add(jLabel8);
        jLabel8.setBounds(130, 360, 130, 17);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Total Amount Paid");
        summaryPanel.add(jLabel9);
        jLabel9.setBounds(130, 390, 130, 20);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Your Ticket has been Mailed to your Registered Email ID.");
        summaryPanel.add(jLabel10);
        jLabel10.setBounds(150, 440, 530, 20);

        sumFlightID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumFlightID.setText("null");
        summaryPanel.add(sumFlightID);
        sumFlightID.setBounds(270, 190, 360, 20);

        sumAirlinelb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumAirlinelb.setText("null");
        summaryPanel.add(sumAirlinelb);
        sumAirlinelb.setBounds(270, 220, 360, 20);

        sumDepartslb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumDepartslb.setText("null");
        summaryPanel.add(sumDepartslb);
        sumDepartslb.setBounds(270, 250, 360, 20);

        sumAirportSource.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumAirportSource.setText("null");
        summaryPanel.add(sumAirportSource);
        sumAirportSource.setBounds(270, 270, 360, 20);

        sumArrivelb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumArrivelb.setText("null");
        summaryPanel.add(sumArrivelb);
        sumArrivelb.setBounds(270, 300, 340, 20);

        sumAirportArrivelb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumAirportArrivelb.setText("null");
        summaryPanel.add(sumAirportArrivelb);
        sumAirportArrivelb.setBounds(270, 320, 340, 20);

        sumNoofPasslb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumNoofPasslb.setText("null");
        summaryPanel.add(sumNoofPasslb);
        sumNoofPasslb.setBounds(270, 360, 340, 20);

        sumAmountlb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sumAmountlb.setText("null");
        summaryPanel.add(sumAmountlb);
        sumAmountlb.setBounds(270, 390, 340, 20);

        summaryBaselb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        summaryBaselb.setIcon(new javax.swing.ImageIcon("E:\\Study\\Fourth Sem\\DBMS\\DBMS Project\\summary.jpg")); // NOI18N
        summaryPanel.add(summaryBaselb);
        summaryBaselb.setBounds(50, 110, 630, 370);

        sumHomeButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sumHomeButton.setText("Home");
        sumHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumHomeButtonActionPerformed(evt);
            }
        });
        summaryPanel.add(sumHomeButton);
        sumHomeButton.setBounds(150, 510, 140, 30);

        sumLogoutButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sumLogoutButton.setText("Logout");
        sumLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumLogoutButtonActionPerformed(evt);
            }
        });
        summaryPanel.add(sumLogoutButton);
        sumLogoutButton.setBounds(430, 510, 140, 30);

        getContentPane().add(summaryPanel);
        summaryPanel.setBounds(0, 0, 800, 600);

        updateUserInfoPanel.setBackground(new java.awt.Color(0, 153, 204));
        updateUserInfoPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        updateUserInfoPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        updateUserInfoPanel.setLayout(null);

        updateInfo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        updateInfo.setForeground(new java.awt.Color(255, 255, 255));
        updateInfo.setText("Update Information");
        updateUserInfoPanel.add(updateInfo);
        updateInfo.setBounds(260, 0, 250, 60);

        lname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lname.setText("Last Name");
        updateUserInfoPanel.add(lname);
        lname.setBounds(110, 110, 120, 40);

        dob.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dob.setText("Date of Birth");
        updateUserInfoPanel.add(dob);
        dob.setBounds(110, 160, 120, 40);

        address.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        address.setText("Address");
        updateUserInfoPanel.add(address);
        address.setBounds(110, 220, 130, 40);

        email.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        email.setText("Email");
        updateUserInfoPanel.add(email);
        email.setBounds(110, 280, 110, 40);

        firstname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        firstname.setText("First Name");
        updateUserInfoPanel.add(firstname);
        firstname.setBounds(110, 60, 120, 40);
        updateUserInfoPanel.add(fnameupdate);
        fnameupdate.setBounds(260, 70, 240, 30);
        updateUserInfoPanel.add(lnameupdate);
        lnameupdate.setBounds(260, 120, 240, 30);
        updateUserInfoPanel.add(dateofbirthupdate);
        dateofbirthupdate.setBounds(260, 170, 240, 30);

        addressupdate.setColumns(20);
        addressupdate.setRows(5);
        jScrollPane4.setViewportView(addressupdate);

        updateUserInfoPanel.add(jScrollPane4);
        jScrollPane4.setBounds(260, 220, 240, 50);

        emailupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailupdateActionPerformed(evt);
            }
        });
        updateUserInfoPanel.add(emailupdate);
        emailupdate.setBounds(260, 290, 240, 30);

        updateButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        updateUserInfoPanel.add(updateButton);
        updateButton.setBounds(260, 510, 240, 40);

        oldpasslb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        oldpasslb.setText("Old Password");
        updateUserInfoPanel.add(oldpasslb);
        oldpasslb.setBounds(110, 350, 120, 30);

        newpasslb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newpasslb.setText("New Password");
        updateUserInfoPanel.add(newpasslb);
        newpasslb.setBounds(110, 400, 120, 30);

        confirmpasslb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        confirmpasslb.setText("Confirm Password");
        updateUserInfoPanel.add(confirmpasslb);
        confirmpasslb.setBounds(100, 450, 142, 30);

        oldpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldpassActionPerformed(evt);
            }
        });
        updateUserInfoPanel.add(oldpass);
        oldpass.setBounds(260, 350, 240, 30);
        updateUserInfoPanel.add(newpass);
        newpass.setBounds(260, 400, 240, 30);

        conpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conpassActionPerformed(evt);
            }
        });
        updateUserInfoPanel.add(conpass);
        conpass.setBounds(260, 450, 240, 30);

        getContentPane().add(updateUserInfoPanel);
        updateUserInfoPanel.setBounds(0, 0, 800, 600);

        addFlightPanel.setBackground(new java.awt.Color(0, 153, 204));
        addFlightPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        addFlightPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        addFlightPanel.setLayout(null);

        backtoHomefromaddFlights.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backtoHomefromaddFlights.setText("Home");
        backtoHomefromaddFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtoHomefromaddFlightsActionPerformed(evt);
            }
        });
        addFlightPanel.add(backtoHomefromaddFlights);
        backtoHomefromaddFlights.setBounds(610, 50, 120, 40);

        addflightlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addflightlb.setText("Add Flight Details");
        addFlightPanel.add(addflightlb);
        addflightlb.setBounds(330, 40, 260, 40);

        flighttypecombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        flighttypecombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Domestic", "International" }));
        addFlightPanel.add(flighttypecombo);
        flighttypecombo.setBounds(330, 90, 160, 40);

        availcombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        availcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        addFlightPanel.add(availcombo);
        availcombo.setBounds(330, 150, 160, 40);

        to_eco_seattxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to_eco_seattxtActionPerformed(evt);
            }
        });
        addFlightPanel.add(to_eco_seattxt);
        to_eco_seattxt.setBounds(330, 210, 160, 30);
        addFlightPanel.add(to_busi_seattxt);
        to_busi_seattxt.setBounds(330, 260, 160, 30);
        addFlightPanel.add(c_eco_s);
        c_eco_s.setBounds(330, 300, 160, 30);
        addFlightPanel.add(c_b_s);
        c_b_s.setBounds(330, 340, 160, 30);
        addFlightPanel.add(airlinestxt);
        airlinestxt.setBounds(330, 380, 160, 30);

        sun.setText("SUN");
        sun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sunActionPerformed(evt);
            }
        });
        addFlightPanel.add(sun);
        sun.setBounds(620, 430, 50, 23);

        mon.setText("MON");
        addFlightPanel.add(mon);
        mon.setBounds(330, 430, 50, 23);

        thu.setText("THU");
        addFlightPanel.add(thu);
        thu.setBounds(480, 430, 50, 23);

        fri.setText("FRI");
        fri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                friActionPerformed(evt);
            }
        });
        addFlightPanel.add(fri);
        fri.setBounds(530, 430, 50, 23);

        sat.setText("SAT");
        addFlightPanel.add(sat);
        sat.setBounds(580, 430, 45, 23);

        tue.setText("TUE");
        addFlightPanel.add(tue);
        tue.setBounds(380, 430, 50, 23);

        wed.setText("WED");
        addFlightPanel.add(wed);
        wed.setBounds(430, 430, 60, 23);
        addFlightPanel.add(aitcrafttxt);
        aitcrafttxt.setBounds(330, 470, 160, 30);

        addFlightnextstepButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addFlightnextstepButton.setText("Proceed");
        addFlightnextstepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightnextstepButtonActionPerformed(evt);
            }
        });
        addFlightPanel.add(addFlightnextstepButton);
        addFlightnextstepButton.setBounds(330, 510, 160, 40);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Flight Type ");
        addFlightPanel.add(jLabel21);
        jLabel21.setBounds(150, 100, 160, 30);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Availabilty ");
        addFlightPanel.add(jLabel22);
        jLabel22.setBounds(150, 150, 160, 30);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Total Economy Seats");
        addFlightPanel.add(jLabel23);
        jLabel23.setBounds(150, 210, 160, 30);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Total Business Seats");
        addFlightPanel.add(jLabel24);
        jLabel24.setBounds(150, 260, 160, 30);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("Current Economic Seats");
        addFlightPanel.add(jLabel25);
        jLabel25.setBounds(150, 300, 180, 30);

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Current Business Seats");
        addFlightPanel.add(jLabel26);
        jLabel26.setBounds(150, 340, 180, 30);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("AirLines");
        addFlightPanel.add(jLabel27);
        jLabel27.setBounds(150, 380, 160, 30);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Runnig Days");
        addFlightPanel.add(jLabel28);
        jLabel28.setBounds(150, 420, 170, 40);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Aircraft");
        addFlightPanel.add(jLabel29);
        jLabel29.setBounds(150, 470, 160, 30);

        getContentPane().add(addFlightPanel);
        addFlightPanel.setBounds(0, 0, 800, 600);

        confirmFlightEntry.setBackground(new java.awt.Color(0, 153, 204));
        confirmFlightEntry.setMinimumSize(new java.awt.Dimension(800, 600));
        confirmFlightEntry.setPreferredSize(new java.awt.Dimension(800, 600));
        confirmFlightEntry.setLayout(null);

        FID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        FID.setText("Enter Running Details");
        confirmFlightEntry.add(FID);
        FID.setBounds(420, 40, 270, 30);

        confirmFlightEntry.add(frcombo);
        frcombo.setBounds(300, 110, 160, 30);

        confirmFlightEntry.add(tocombo);
        tocombo.setBounds(300, 160, 160, 30);
        confirmFlightEntry.add(dep);
        dep.setBounds(300, 220, 160, 30);
        confirmFlightEntry.add(arr);
        arr.setBounds(300, 280, 160, 30);
        confirmFlightEntry.add(far);
        far.setBounds(300, 330, 160, 30);

        confirmAddFlight.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        confirmAddFlight.setText("Add Flight");
        confirmAddFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmAddFlightActionPerformed(evt);
            }
        });
        confirmFlightEntry.add(confirmAddFlight);
        confirmAddFlight.setBounds(300, 420, 160, 30);

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel30.setText("From:");
        confirmFlightEntry.add(jLabel30);
        jLabel30.setBounds(110, 110, 150, 30);

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel31.setText("To:");
        confirmFlightEntry.add(jLabel31);
        jLabel31.setBounds(110, 170, 150, 30);

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel32.setText("Departure Time :");
        confirmFlightEntry.add(jLabel32);
        jLabel32.setBounds(110, 230, 150, 30);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel33.setText("Arrival Time :");
        confirmFlightEntry.add(jLabel33);
        jLabel33.setBounds(110, 290, 150, 30);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel34.setText("Fare :");
        confirmFlightEntry.add(jLabel34);
        jLabel34.setBounds(110, 340, 150, 30);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel35.setText("Enter Running Details for Flight ID :");
        confirmFlightEntry.add(jLabel35);
        jLabel35.setBounds(100, 40, 300, 30);

        getContentPane().add(confirmFlightEntry);
        confirmFlightEntry.setBounds(0, 0, 800, 600);

        adminInfoPanel.setBackground(new java.awt.Color(0, 153, 204));
        adminInfoPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        adminInfoPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        adminInfoPanel.setLayout(null);

        acc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        acc.setText("Account Information");
        adminInfoPanel.add(acc);
        acc.setBounds(310, 30, 230, 30);

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel36.setText("Name :");
        adminInfoPanel.add(jLabel36);
        jLabel36.setBounds(130, 110, 130, 40);

        passlb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passlb.setText("Email ID :");
        adminInfoPanel.add(passlb);
        passlb.setBounds(110, 150, 150, 40);

        adminname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        adminname.setText("name");
        adminInfoPanel.add(adminname);
        adminname.setBounds(240, 120, 370, 30);

        adminemail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        adminemail.setText("email");
        adminInfoPanel.add(adminemail);
        adminemail.setBounds(240, 160, 370, 30);

        updaeinfo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        updaeinfo.setText("Update Infromation");
        adminInfoPanel.add(updaeinfo);
        updaeinfo.setBounds(290, 230, 300, 50);

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel37.setText("Name :");
        adminInfoPanel.add(jLabel37);
        jLabel37.setBounds(50, 300, 140, 30);

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel38.setText("Email:");
        adminInfoPanel.add(jLabel38);
        jLabel38.setBounds(50, 340, 140, 30);

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel39.setText("Old Password :");
        adminInfoPanel.add(jLabel39);
        jLabel39.setBounds(50, 380, 140, 30);

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel40.setText("New Password :");
        adminInfoPanel.add(jLabel40);
        jLabel40.setBounds(50, 420, 140, 30);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel41.setText("Confirm Password :");
        adminInfoPanel.add(jLabel41);
        jLabel41.setBounds(50, 460, 160, 30);
        adminInfoPanel.add(anametxt);
        anametxt.setBounds(280, 300, 240, 30);
        adminInfoPanel.add(aemailtxt);
        aemailtxt.setBounds(280, 340, 240, 30);
        adminInfoPanel.add(aoldtxt);
        aoldtxt.setBounds(280, 380, 240, 30);
        adminInfoPanel.add(anewtxt);
        anewtxt.setBounds(280, 420, 240, 30);
        adminInfoPanel.add(acontxt);
        acontxt.setBounds(280, 460, 240, 30);

        updateAdminInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateAdminInfo.setText("Update");
        updateAdminInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAdminInfoActionPerformed(evt);
            }
        });
        adminInfoPanel.add(updateAdminInfo);
        updateAdminInfo.setBounds(330, 510, 150, 30);

        backtohomefromadmininfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backtohomefromadmininfo.setText("Home");
        backtohomefromadmininfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtohomefromadmininfoActionPerformed(evt);
            }
        });
        adminInfoPanel.add(backtohomefromadmininfo);
        backtohomefromadmininfo.setBounds(620, 80, 130, 40);

        getContentPane().add(adminInfoPanel);
        adminInfoPanel.setBounds(0, 0, 800, 600);

        cancelation.setBackground(new java.awt.Color(0, 153, 204));
        cancelation.setMinimumSize(new java.awt.Dimension(800, 600));
        cancelation.setPreferredSize(new java.awt.Dimension(800, 600));
        cancelation.setLayout(null);

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel42.setText("Cancel Booking");
        cancelation.add(jLabel42);
        jLabel42.setBounds(310, 40, 150, 40);

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel43.setText("Flight ID :");
        cancelation.add(jLabel43);
        jLabel43.setBounds(130, 110, 130, 30);

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel44.setText("Reservation ID :");
        cancelation.add(jLabel44);
        jLabel44.setBounds(110, 150, 180, 30);

        confirmationmessage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cancelation.add(confirmationmessage);
        confirmationmessage.setBounds(80, 200, 660, 110);

        confirmCancelation.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        confirmCancelation.setText("Confirm Cancelation");
        confirmCancelation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmCancelationActionPerformed(evt);
            }
        });
        cancelation.add(confirmCancelation);
        confirmCancelation.setBounds(280, 320, 250, 50);

        backtohomefromcancelation.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backtohomefromcancelation.setText("Home");
        backtohomefromcancelation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtohomefromcancelationActionPerformed(evt);
            }
        });
        cancelation.add(backtohomefromcancelation);
        backtohomefromcancelation.setBounds(620, 60, 120, 40);

        fidcon.setText("fidcon");
        cancelation.add(fidcon);
        fidcon.setBounds(310, 110, 230, 30);

        residcon.setText("residcon");
        cancelation.add(residcon);
        residcon.setBounds(310, 150, 230, 30);

        getContentPane().add(cancelation);
        cancelation.setBounds(0, 0, 800, 600);

        flightDetail.setBackground(new java.awt.Color(0, 153, 204));
        flightDetail.setMinimumSize(new java.awt.Dimension(800, 600));
        flightDetail.setLayout(null);

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel45.setText("Flight  Details");
        flightDetail.add(jLabel45);
        jLabel45.setBounds(320, 20, 120, 30);

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel46.setText("Flight ID :");
        flightDetail.add(jLabel46);
        jLabel46.setBounds(100, 100, 100, 30);

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel47.setText("Type of Flight :");
        flightDetail.add(jLabel47);
        jLabel47.setBounds(100, 150, 170, 30);

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel48.setText("Availabilty :");
        flightDetail.add(jLabel48);
        jLabel48.setBounds(100, 190, 170, 30);

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel49.setText("Total Economy Seats :");
        flightDetail.add(jLabel49);
        jLabel49.setBounds(100, 230, 170, 30);

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel50.setText("Total Business Seats :");
        flightDetail.add(jLabel50);
        jLabel50.setBounds(100, 270, 170, 30);

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel51.setText("Current Economy Seats :");
        flightDetail.add(jLabel51);
        jLabel51.setBounds(100, 310, 170, 30);

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel52.setText("Current Business Seats :");
        flightDetail.add(jLabel52);
        jLabel52.setBounds(100, 360, 170, 30);

        jLabel53.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel53.setText("Airlines :");
        flightDetail.add(jLabel53);
        jLabel53.setBounds(100, 400, 170, 30);

        fidadmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fidadmin.setText("fidadmin");
        flightDetail.add(fidadmin);
        fidadmin.setBounds(320, 90, 250, 30);

        tyadmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tyadmin.setText("tyadmin");
        flightDetail.add(tyadmin);
        tyadmin.setBounds(320, 134, 250, 30);

        avadmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        avadmin.setText("avadmin");
        flightDetail.add(avadmin);
        avadmin.setBounds(320, 174, 250, 30);

        tesadmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tesadmin.setText("tesadmin");
        flightDetail.add(tesadmin);
        tesadmin.setBounds(320, 224, 260, 30);

        tbsadmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbsadmin.setText("tebadmin");
        flightDetail.add(tbsadmin);
        tbsadmin.setBounds(320, 264, 260, 30);

        cesadmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cesadmin.setText("cesadmin");
        flightDetail.add(cesadmin);
        cesadmin.setBounds(320, 304, 260, 30);

        cbsadmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbsadmin.setText("cbsadmin");
        flightDetail.add(cbsadmin);
        cbsadmin.setBounds(320, 354, 260, 30);

        airlinesadmin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        airlinesadmin.setText("airlinesadmin");
        flightDetail.add(airlinesadmin);
        airlinesadmin.setBounds(320, 394, 280, 30);

        backtohomefromflightdetais.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backtohomefromflightdetais.setText("Home");
        backtohomefromflightdetais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtohomefromflightdetaisActionPerformed(evt);
            }
        });
        flightDetail.add(backtohomefromflightdetais);
        backtohomefromflightdetais.setBounds(640, 50, 130, 40);

        getContentPane().add(flightDetail);
        flightDetail.setBounds(0, 0, 800, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userTextFieldActionPerformed

    private void userRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userRadioButtonActionPerformed

    private void registerHereButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerHereButtonActionPerformed
       loginPagePanel.setVisible(false);
       registrationPanel.setVisible(true);
    }//GEN-LAST:event_registerHereButtonActionPerformed

    private void flightDetailsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightDetailsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flightDetailsTextFieldActionPerformed

    private void searchByResIDuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByResIDuserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchByResIDuserActionPerformed

    private void fromComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromComboBoxActionPerformed
            
        
    }//GEN-LAST:event_fromComboBoxActionPerformed

    private void searchFlightsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFlightsButtonActionPerformed
        
        DatabaseConnection dbsearch = new DatabaseConnection();
        Statement st;
        ResultSet rs;
        String searchsql;
        String flighttype;
        String source;
        String destination;
        String departureDate;
        
        String PassCount;
       
        source = fromComboBox.getSelectedItem().toString();
        destination = toComboBox.getSelectedItem().toString();
        String date = departureDateChooser.getDate().toString();
        String day;
       // departureDate = departureDateTextField.getText();
        departureDate =  date.substring(8, 10) +"-"+ date.substring(4,7)+"-"+date.substring(24,28);
        day = date.substring(0,3).toUpperCase();
        PassCount = passengerscountTextField.getText();
        try {
            
            dbsearch.connect();
            st =  dbsearch.conn.createStatement();
            String journeyid = "SELECT JOURNEY_ID FROM DISTANCE WHERE SOURCE = '"+source+"' and destination = '"+destination+"'";
            rs = st.executeQuery(journeyid);
            while(rs.next()){
                journeyid = rs.getString("journey_id");
            }
            System.out.println(journeyid);// journy id found

            searchsql = "SELECT DISTINCT ARRIVAL.FLIGHT_ID,departure_time Departs,arrival_time  Arrives,fare,FLIGHT.AIRLINES Airline FROM ARRIVAL,FLIGHT,DEPARTURE,FLIGHT_FARE "
                    + "WHERE ARRIVAL.airport_id = (SELECT airport_id FROM AIRPORT WHERE city_name = " + "'" + destination + "') "
                    + "AND DEPARTURE.airport_id = (SELECT airport_id FROM AIRPORT WHERE city_name = " + "'" + source + "') "
                    + "AND ARRIVAL.flight_id = DEPARTURE.flight_id "
                    + "AND ARRIVAL.flight_id = FLIGHT.flight_id "
                    + "AND FLIGHT_FARE.flight_id = ARRIVAL.flight_id "
                    + "AND ARRIVAL.flight_id in (SELECT flight_id FROM RUNNING_SCHEDULE WHERE DAY = "
                    + "'"+day+"' "+"AND ARRIVAL.flight_id in (SELECT FLIGHT_ID FROM FLIGHT_FARE WHERE journey_id = "+"'"+journeyid +"'))";
                    
            System.out.println(searchsql);
            String f_id;
            String fare;
            String arrival;
            String Departure;
            
            int countRows = 0;
            boolean err = false;
            try{
            rs = st.executeQuery(searchsql);
             }
            catch(SQLException ex){
                System.out.println("No  flights Found");
                err = true;
            }
            finally {
                    if(err){
                    JOptionPane.showMessageDialog(null,"Sorry No Flights Found!");
                    }
            }
            searchResultTable.setModel(DbUtils.resultSetToTableModel(rs));

            
            System.out.println(day);

            FlightInfoFrom.setText(source);
            flightInfoto.setText(destination);
            flightinfoday.setText(day);
            flightinfodate.setText(departureDate);
            int no = searchResultTable.getRowCount();
            String n = ""+no;
            noofflights.setText(n);
          String day1 = date.substring(0,3).toUpperCase();
          String extractdate = date.substring(8, 10) +"-"+ date.substring(4,7)+"-"+date.substring(24,28);
          System.out.println(day1);
            System.out.println(extractdate);
            System.out.println(date);
        }   
        catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        searchFlightsPanel.setVisible(false);
        flightTypeGroup.clearSelection();
       
        searchResultsPanel.setVisible(true);
        
    }//GEN-LAST:event_searchFlightsButtonActionPerformed

    private void fromComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fromComboBoxKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromComboBoxKeyPressed

    private void fromComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fromComboBoxMouseClicked

        
    }//GEN-LAST:event_fromComboBoxMouseClicked

    private void toComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toComboBoxMouseClicked

    }//GEN-LAST:event_toComboBoxMouseClicked

    private void fromComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fromComboBoxMouseEntered
      
    }//GEN-LAST:event_fromComboBoxMouseEntered

    private void toComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toComboBoxMouseEntered
      
    }//GEN-LAST:event_toComboBoxMouseEntered

    private void flighIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flighIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flighIDTextFieldActionPerformed

    private void bookNowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNowButtonActionPerformed
       //DefaultTableModel tm = (DefaultTableModel) searchResultTable.getModel();
       //tm.setNumRows(0);
      
//            FlightInfoFrom.setText(source);
//            flightInfoto.setText(destination);
//            flightinfoday.setText(day);
//            flightinfodate.setText(departureDate);
//            int no = searchResultTable.getRowCount();
//            String n = ""+no;
//            noofflights.setText(n);
        
       String dDate =  flightinfodate.getText();
       String dy = flightinfoday.getText();
       searchResultsPanel.setVisible(false);
       AirlineReviewlb.setText((String) searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 4));
       timeRiviewlb.setText((String) searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 1));
       dayDateReviewlb.setText(dy+", "+dDate);
       sourceReviewlb.setText(FlightInfoFrom.getText());
       ArrivalReviewlb.setText((String) searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 2));
       destinationReviewlb.setText(flightInfoto.getText());
       amountContainerlb.setText("Rs. "+ searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 3).toString());
       int total;
       total = Integer.parseInt(passengerscountTextField.getText());
       int fare;
       String f = searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 3).toString() ;
       fare = Integer.parseInt(f);
        System.out.println(f+1);
       total = fare*total;
      totalContainer.setText(""+total);
      // flighIDTextField.setText((String) searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 0));
       RiviewFlightDetailsPanel.setVisible(true);
       
    }//GEN-LAST:event_bookNowButtonActionPerformed

    private void continueToPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueToPaymentButtonActionPerformed
        // TODO add your handling code here:
        
        if(passengerDetailsTable.isEditing()){
           passengerDetailsTable.getCellEditor().stopCellEditing();
        }
        
        passengerDetailsPanel.setVisible(false);
        
        
       // Object o = tm.getValueAt(1,1);
        //System.out.println(o.toString());\
        // here we need to insert data ofpassengers to database.
        Statement st;
        
        DatabaseConnection dbpassenger = new DatabaseConnection();
        try {
            dbpassenger.connect();
            st = dbpassenger.conn.createStatement();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        amountDueLabel.setText("Amount Due : " + totalContainer.getText());
        paymentPanel.setVisible(true);
        
        
    }//GEN-LAST:event_continueToPaymentButtonActionPerformed

    private void cardNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardNumberTextFieldActionPerformed

    private void userNameRegistertxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameRegistertxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameRegistertxtActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        DatabaseConnection db = new DatabaseConnection();
        if(adminRadioButton.isSelected()){
            continueToPaymentButton.setVisible(false);
            confirmReservation.setVisible(true);
        }else {
            confirmReservation.setVisible(false);
            continueToPaymentButton.setVisible(true);
            
            
        }
        ResultSet rs = null;
        Statement st;
        boolean error = false;
        String passString ="";
        String sqlUser = null;
        String sqlAdmin = null;
        String First_name = null;
        String usernameVar;
        char[] passwordVar = new char[100];
        try {
            db.connect();
            usernameVar = userTextField.getText();
            passwordVar = passTextField.getPassword();
            st = db.conn.createStatement();
            for(int i = 0; i < passwordVar.length;i++){
                passString += passwordVar[i];
            }
            if(adminRadioButton.isSelected()) {
                sqlAdmin = "select username ,password,name from ADMIN where username = " + "'" + usernameVar + "' " + "and password = " + "'" + passString + "'" ;
                rs = st.executeQuery(sqlAdmin);
            } else if(userRadioButton.isSelected()){
                sqlUser = "select username ,password,first_name from LOGIN where username = " + "'" + usernameVar + "' " + "and password = " + "'" + passString + "'" ;
                rs = st.executeQuery(sqlUser);
            } else {
                JOptionPane.showMessageDialog(null,"Please Select Login As Field!");
                error = true;
                
            }
            
            int count = 0;
            
            if (error != true &&  rs != null) {
                    
                        while(rs.next()){
                        count++;
                        System.out.println("Password Matched");
                        System.out.println("username = " + rs.getString("username"));
                        System.out.println("password=" + rs.getString("password"));
                        if (adminRadioButton.isSelected())
                        First_name = rs.getString("name");
                        else First_name = rs.getString("first_name");
                        }
                
             
                if (count == 0) {
                    JOptionPane.showMessageDialog(null, "Invalid Login details!");
                } else if (count == 1) { // login successfull
                    loginPagePanel.setVisible(false);
                    if (adminRadioButton.isSelected()) {
                        res_searchadmin.setText(null);
                        flightDetailsTextField.setText(null);
                        welcomeAdminLabel.setText("Welcome " + First_name);
                        adminWelcomePanel.setVisible(true);
                    } else if (userRadioButton.isSelected()) {
                        
                        welcomeUsernameLabel.setText("Welcome " + First_name);
                        userWelcomePanel.setVisible(true);
                    }

                }
            }
            
            db.conn.close();
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void logoutUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutUserButtonActionPerformed
        userTextField.setText(null);
        adminusergroup.clearSelection();
        passTextField.setText(null);
        forgotPasswordCheckBox.setSelected(false);
        userWelcomePanel.setVisible(false);
        loginPagePanel.setVisible(true);
       
    }//GEN-LAST:event_logoutUserButtonActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        String username;
        char [] passwordEntered = new char[40];
        char [] conPassEntered = new char[40];
        String pass;
        String con;
        String address;
        String dob = null;
        String f_name;
        String l_name;
        String email;
        String registerSql;
        ResultSet rs = null;
        Statement st = null;
        
        username = userNameRegistertxt.getText();
        passwordEntered = passRegisterTxt.getPassword();
        conPassEntered = confirmPassRegTxt.getPassword();
        address = addressRegisterTxt.getText();
        f_name = firstNameRegisterTxt.getText();
        l_name = lastNameRegisterTxt.getText();
        if( dobChooser.getDate() != null){
        String dobfull  = dobChooser.getDate().toString();
        dob = dobfull.substring(8, 10) +"-"+ dobfull.substring(4,7)+"-"+dobfull.substring(24,28);
        }
        
        email = emailRegisterTxt.getText();
        pass = new String(passwordEntered);
        con = new String(conPassEntered);
        
        if(username.length() != 0 && pass.length() != 0 && address.length() != 0 && dob.length() != 0 && f_name.length() != 0 && l_name.length() != 0 && email.length() != 0 && pass.equals(con)){
            try {
                DatabaseConnection reg = new DatabaseConnection();
                reg.connect();
                st = reg.conn.createStatement();
            
                registerSql = "INSERT INTO LOGIN VALUES ('" + username + "','" + pass + "','" + address + "','" + dob + "','" + f_name + "','" + l_name + "','" + email + "')";
                System.out.println(registerSql);
                st.execute(registerSql);
                 JOptionPane.showMessageDialog(null, "You Have Been Registered Successfully!");
                 reg.conn.close();
                userWelcomePanel.setVisible(false);
                registrationPanel.setVisible(false);
                loginPagePanel.setVisible(true);
                
            } catch (SQLException ex) {
                Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if(pass.equals(con)) {
            JOptionPane.showMessageDialog(null, "Please Fill All Fields!");
        } else {
            JOptionPane.showMessageDialog(null, "Passwords Do not Match!");
            confirmPassRegTxt.setText(null);
        }
        
        
        
        
        
    }//GEN-LAST:event_registerButtonActionPerformed

    private void logoutAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutAdminButtonActionPerformed
        userTextField.setText(null);
        adminusergroup.clearSelection();
        passTextField.setText(null);
        forgotPasswordCheckBox.setSelected(false);
        adminWelcomePanel.setVisible(false);
        loginPagePanel.setVisible(true);
    }//GEN-LAST:event_logoutAdminButtonActionPerformed

    private void searchFlightsUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFlightsUserButtonActionPerformed
        userWelcomePanel.setVisible(false);
        searchFlightsPanel.setVisible(true);
        DatabaseConnection search = new DatabaseConnection();
        String fromtosql;
        ResultSet fromto;
        Statement st;
        try {
            
            search.connect();
            st = search.conn.createStatement();
            
            fromtosql = "SELECT DISTINCT source as fromto FROM DISTANCE union SELECT DISTINCT destination FROM DISTANCE";
            fromto = st.executeQuery(fromtosql);
            fromComboBox.removeAllItems();
            toComboBox.removeAllItems();
            while(fromto.next()){
                fromComboBox.addItem(fromto.getString("fromto"));
                toComboBox.addItem(fromto.getString("fromto"));
           
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchFlightsUserButtonActionPerformed

    private void forgotPasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forgotPasswordCheckBoxActionPerformed
        String user = userTextField.getText();
        System.out.println(user);
        Statement st = null;
        String emailsql,mail = null,pass = null;
        ResultSet rs;
        DatabaseConnection dbemail = new DatabaseConnection();
        int countRow = 0;
        try {
            dbemail.connect();
            st = dbemail.conn.createStatement();
            emailsql = "SELECT email,password FROM LOGIN WHERE username  = "+"'" + user + "'";
            rs = st.executeQuery(emailsql);
            while(rs.next()){
                countRow++;
                mail = rs.getString("email");
                pass = rs.getString("password");
            }
            if(countRow == 1){
                Email e = new Email();
                try {
                    e.sendEmail(mail,pass);
                } catch (MessagingException ex) {
                    Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null,"Invalid Username!");
                userTextField.setText(null);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_forgotPasswordCheckBoxActionPerformed

    private void searchResultTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultTableMouseClicked
      //name.setText((String) tbbranch.getValueAt(tbbranch.getSelectedRow(),0));
        
        flighIDTextField.setText((String) searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 0));
    }//GEN-LAST:event_searchResultTableMouseClicked

    private void continuelbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuelbActionPerformed
         RiviewFlightDetailsPanel.setVisible(false);
         //DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();

    //dtm.setNumRows(0); 
         DefaultTableModel tm = (DefaultTableModel) passengerDetailsTable.getModel();
         tm.setNumRows(0);
         tm.setNumRows(Integer.parseInt(passengerscountTextField.getText()));
         TableColumn idType = passengerDetailsTable.getColumnModel().getColumn(5);
         JComboBox idTypeCombo = new JComboBox();
         
         idTypeCombo.addItem("Pan Card");
         idTypeCombo.addItem("Student ID");
         idTypeCombo.addItem("Aadhar Card");
         idTypeCombo.addItem("Rashan Card");
         idType.setCellEditor(new DefaultCellEditor(idTypeCombo));
         
        passengerDetailsPanel.setVisible(true);
    }//GEN-LAST:event_continuelbActionPerformed

    private void makePaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePaymentButtonActionPerformed
        
        String cardtype = cardTypeComboBox.getSelectedItem().toString();
        String cardnumber = cardNumberTextField.getText();
        TableModel tm = passengerDetailsTable.getModel();
        char [] cardpass = new char[20];
        cardpass = cardPasswordTextField.getPassword();
        String pass ="";
        for(int i =0; i < cardpass.length;i++) {
            pass += cardpass[i];
        }
        System.out.println(pass);
        DatabaseConnection pay = new DatabaseConnection();
        Statement st;
        ResultSet rs;
        try {
            pay.connect();
            st = pay.conn.createStatement();
            //create a reservationid
            
            //select card_type, password from card_details where card_number in (select card_number from payment where username ='atul05kumar') and password = 'secure' and card_type = 'VISA' 
          String sql = "SELECT PASSWORD FROM CARD_DETAILS WHERE CARD_NUMBER = "+ "'"+cardnumber+"' AND CARD_TYPE = '"+cardtype+"' AND PASSWORD = '"+pass+"'";
            System.out.println(sql);
            rs = st.executeQuery(sql);
            boolean payment = false;
            while(rs.next()){
                JOptionPane.showMessageDialog(null,"Payment Successfull!");
                payment = true;
            }
            if(payment){

                sumFlightID.setText((String) searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 0));
                sumAirlinelb.setText((String) searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 4));
                sumArrivelb.setText(ArrivalReviewlb.getText());
                sumDepartslb.setText(timeRiviewlb.getText());
                sumNoofPasslb.setText(passengerscountTextField.getText());
                sumAmountlb.setText(totalContainer.getText());
                sql = "SELECT AIRPORT_NAME FROM AIRPORT WHERE CITY_NAME = '"+sourceReviewlb.getText()+"'";
                rs = st.executeQuery(sql);
                while(rs.next()){
                    sumAirportSource.setText(rs.getString("airport_name"));
                }
                sql = "SELECT AIRPORT_NAME FROM AIRPORT WHERE CITY_NAME = '"+destinationReviewlb.getText()+"'";
                rs = st.executeQuery(sql);
                while(rs.next()){
                    sumAirportArrivelb.setText(rs.getString("airport_name"));
                }
                
                String cl;
                if(classComboBox.getSelectedItem().toString().equals("Economy")){
                    cl = "Economy";
                } else cl = "Business";
                //here payment successfull now creating reservaion id
           
                String journeyid = "SELECT JOURNEY_ID FROM DISTANCE WHERE SOURCE = '" + sourceReviewlb.getText() + "' and destination = '" + destinationReviewlb.getText() + "'";
                rs = st.executeQuery(journeyid);
                while (rs.next()) {
                    journeyid = rs.getString("journey_id");
                }
                
                //select re from (select reservation_id re, rownum r from fare_info  
                //where reservation_id like 'F12_Business%' order by reservation_id desc) where r = 1;
                
                
                String res = sumFlightID.getText() + "_"+ cl;
               // insert into fare_info values (concat('F1_ECO',FARJI_SEQ.nextval),'12345','LKO-DEL')
                String fare_info = "INSERT INTO FARE_INFO VALUES (concat('"+res+"',res_id_seq.nextval),'"+sumAmountlb.getText()+"','"+journeyid+"',SYSDATE)";
                st.execute(fare_info);
                System.out.println(fare_info);
                //resevation id renerated;
                String reservation_id;
                //again retrieve pasenger id.
                //select reservation_id from fare_info where time = (select  max(time) from fare_info)
                //reservation_id = "SELECT RE FROM (SELECT RESERVATION_ID RE ,ROWNUM R FROM FARE_INFO WHERE RESERVATION_ID LIKE '"+res+"%' ORDER BY TIME DESC) WHERE R = 1";
                reservation_id = "SELECT RESERVATION_ID FROM FARE_INFO WHERE TIME = (SELECT MAX(TIME) FROM FARE_INFO)";
                System.out.println(reservation_id);
                rs = st.executeQuery(reservation_id);
                while(rs.next()){
                    reservation_id = rs.getString("RESERVATION_ID");
                }
                System.out.println(reservation_id); // got reservation id
                //now insert it in user_reservation table // history
                String user_res;
                user_res = "INSERT INTO USER_RESERVATION VALUES ('"+reservation_id+"','"+userTextField.getText()+"')";
                System.out.println(user_res);
                st.execute(user_res);
                //  NOW INSERT IN RESERVATION TABLE
                // NEED TO CALULATE SEAT NUMBER
                int current_eco_seat=0;
                int current_busi_seat=0;
                int to_e = 0,to_b=0;
                String findseats;
                //select current_eco_seat,current_busi_seat  from flight where flight_id = 'F1'
                findseats = "SELECT TOTAL_ECO_SEAT,TOTAL_BUSINESS_SEAT, CURRENT_ECO_SEAT,CURRENT_BUSI_SEAT FROM FLIGHT WHERE FLIGHT_ID = '"+sumFlightID.getText()+"'";
                System.out.println(findseats);
                rs = st.executeQuery(findseats);
                
                while(rs.next()){
                    to_e = Integer.parseInt(rs.getString("TOTAL_ECO_SEAT"));
                    to_b= Integer.parseInt(rs.getString("TOTAL_BUSINESS_SEAT"));
                    current_eco_seat = Integer.parseInt(rs.getString("CURRENT_ECO_SEAT"));
                    current_busi_seat = Integer.parseInt(rs.getString("CURRENT_BUSI_SEAT"));
                    
                }
                // now enter in reservation table
                
                //INSERT INTO RESERVATION VALUES ('F12_Business22',farji_seq.nextval,12,'f2','business');
                int p_seat_num;
                String restable;
                for (int i = 0; i < Integer.parseInt(passengerscountTextField.getText()); i++) {
                    if(cl.equals("Economy")){
                        p_seat_num = to_e - current_eco_seat + 1;
                        current_eco_seat--;
                        restable = "INSERT INTO RESERVATION VALUES ('"+reservation_id+"', CONCAT('P',farji_seq.nextval),'"+"E"+p_seat_num+"','"+sumFlightID.getText()+"','"+cl+"')";
                    } else {
                        p_seat_num = to_b - current_busi_seat + 1;
                        current_busi_seat--;
                        restable = "INSERT INTO RESERVATION VALUES ('"+reservation_id+"', CONCAT('P',farji_seq.nextval),'"+"B"+p_seat_num+"','"+sumFlightID.getText()+"','"+cl+"')";
                    }
                    System.out.println(restable);
                    st.execute(restable); 
                }
                
                //get passenger id for this reservation
                //select passenger_id from reservation where reservation_id = 'F12_Economy41'
                String getp_id;
                getp_id = "SELECT PASSENGER_ID FROM RESERVATION WHERE RESERVATION_ID = '"+reservation_id+"'";
                rs = st.executeQuery(getp_id);
                String [] p_id = new String[10];
                int index = 0;
                while(rs.next()){
                    p_id[index] = rs.getString("passenger_id");
                    index++;
                }
                // update current available seat numbers
                //update reservation set seat_number = 'B2' where reservation_id = 'F12_Business32';
                String updateseat = "UPDATE FLIGHT SET CURRENT_ECO_SEAT = "+current_eco_seat+", CURRENT_BUSI_SEAT = "+current_busi_seat+" WHERE FLIGHT_ID = '"+sumFlightID.getText()+"'";
                st.execute(updateseat);
                Statement updateAuth;
                updateAuth = pay.conn.createStatement();
                // insert into passenger table
                for (int i = 0; i < Integer.parseInt(passengerscountTextField.getText()); i++) {
                    //INSERT INTO PASSENGER VALUES(CONCAT('P',farji_seq.nextval),'Atul','Kumar','12/12/1234','Lucknow','atul05kumar@gmail.com')
                    String sqlpassenger = "INSERT INTO PASSENGER VALUES ('" + p_id[i] + "','"
                            + tm.getValueAt(i, 0).toString() + "','" + tm.getValueAt(i, 1).toString() + "','" + tm.getValueAt(i, 2).toString() + "','" + tm.getValueAt(i, 3).toString() + "','" + tm.getValueAt(i, 4).toString() + "')";
                    System.out.print(sqlpassenger);
                    //insert into passenger_identification values ('passenger_id','td_type',12345);
                    String updateauthsql = "INSERT INTO PASSENGER_IDENTIFICATION VALUES ('"+p_id[i]+"','"+tm.getValueAt(i, 5).toString()+"',"+tm.getValueAt(i, 6).toString()+")";
                    st.execute(sqlpassenger);
                    updateAuth.execute(updateauthsql);
                    //need to inser id in passenger authenticaton tabel.
                    
                    String type = tm.getValueAt(i, 5).toString();
                    System.out.println("Type " +type);
                    System.out.println("");
                }
                
                paymentPanel.setVisible(false);
                 String getemail = "SELECT EMAIL,FIRST_NAME FROM LOGIN WHERE USERNAME = '"+userTextField.getText()+"'";
                rs = st.executeQuery(getemail);
                String to = null,f_name =null;
                while(rs.next()){
                    to = rs.getString("email");
                    f_name = rs.getString("first_name");
                }
                String []ticketinfo = new String[20];
                
                ticketinfo[0] = reservation_id;
                ticketinfo[1] = sumFlightID.getText();
                ticketinfo[2] = sumAirlinelb.getText();
                ticketinfo[3] = sumArrivelb.getText();
                ticketinfo[4] = sumDepartslb.getText();
                ticketinfo[5] = sumNoofPasslb.getText();
                ticketinfo[6] = sumAmountlb.getText();
                ticketinfo[7] = sumAirportSource.getText();
                ticketinfo[8] = sumAirportArrivelb.getText();
                ticketinfo[9] = f_name;
                Email sendtick = new Email();
                
               
                try {
                    sendtick.sendTicket(to, ticketinfo);
                } catch (MessagingException ex) {
                    Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                        

                
                summaryPanel.setVisible(true);
            } else JOptionPane.showMessageDialog(null,"Invalid Details!");
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_makePaymentButtonActionPerformed

    private void backToSearchlbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToSearchlbActionPerformed
       RiviewFlightDetailsPanel.setVisible(false);
       searchResultsPanel.setVisible(true);
    }//GEN-LAST:event_backToSearchlbActionPerformed

    private void sumHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumHomeButtonActionPerformed
        summaryPanel.setVisible(false);
        if(userRadioButton.isSelected()){
            userWelcomePanel.setVisible(true);
        } else adminWelcomePanel.setVisible(false);
        
    }//GEN-LAST:event_sumHomeButtonActionPerformed

    private void sumLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumLogoutButtonActionPerformed
        summaryPanel.setVisible(false);
        userTextField.setText(null);
        passTextField.setText(null);
        adminusergroup.clearSelection();
        loginPagePanel.setVisible(true);
    }//GEN-LAST:event_sumLogoutButtonActionPerformed

    private void showReservationDetailsUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showReservationDetailsUserButtonActionPerformed
        String res_id;
        res_id = searchByResIDuser.getText();
        DatabaseConnection searchres = new DatabaseConnection();
        Statement st;
        ResultSet rs;
        try {
            searchres.connect();
            st = searchres.conn.createStatement();
            //this query generates table model for passenger details.
            //select passenger.first_name,seat_number,class from reservation,passenger where reservation_id = 'F12_Economy74' and passenger.passenger_id = reservation.passenger_id
           //select reservation_id from user_reservation where username = 'atul05kumar' and reservation_id = 'F12_Economy74'
            String findvalid = "SELECT RESERVATION_ID FROM USER_RESERVATION WHERE USERNAME = '"+userTextField.getText()+"' AND RESERVATION_ID = '"+res_id+"'";
            rs = st.executeQuery(findvalid);
            if(!rs.next()){
                JOptionPane.showMessageDialog(null,"Invalid ReservationID!");
                return;
            }
            residresult.setText(res_id);
            //table model bulder
            //select first_name,seat_number,class,id_type,id_number from reservation,passenger_identification,passenger
            //where reservation_id = 'F12_Economy92' and reservation.passenger_id = passenger_identification.passenger_id 
            //and passenger.passenger_id= reservation.passenger_id ;
            String updatetablemodel = "SELECT FIRST_NAME Name,SEAT_NUMBER Seat_Number,CLASS Class,ID_TYPE ID_Type,ID_NUMBER ID_Number "
                    +"FROM RESERVATION,PASSENGER_IDENTIFICATION,PASSENGER WHERE RESERVATION_ID = '"+res_id+"' AND RESERVATION.PASSENGER_ID = PASSENGER_IDENTIFICATION.PASSENGER_ID "
                    +"AND PASSENGER.PASSENGER_ID = RESERVATION.PASSENGER_ID";
            System.out.println(updatetablemodel);
            rs = st.executeQuery(updatetablemodel);
            passdetail.setModel(DbUtils.resultSetToTableModel(rs));            
//select distinct flight_id from reservation where reservation_id = 'F12_Economy92'  // flight_id
//select count(passenger_id) from reservation where reservation_id = 'F12_Economy92' // count no. of passenger
//select airlines from flight where flight_id = 'F12' // airline
//select journey_id, fare from fare_info where reservation_id = 'F12_Economy92' // journey_id, total_fare, 
//select source ,destination,distance_km from distance where journey_id = 'MUB-ALH' // source , destination , distance 
//select airport_name,airport_id from airport where city_name = 'Mumbai' // airport name write twice airport_id.
//select arrival_time from arrival where flight_id = 'F12' and airport_id = 'A8' // arrivaltime, departuretime write twice
           
    String journey_id = null,flight_id = null,airline = null,dtime = null,dairport = null,daid = null,atime = null,aairport = null,aaid = null,dis = null,nop = null,total = null,dtimezone = null,atimezone = null,from = null,to = null;
    String getflightid = "SELECT DISTINCT FLIGHT_ID FROM RESERVATION WHERE RESERVATION_ID = '"+res_id+"'";
    rs = st.executeQuery(getflightid);
    while(rs.next()){
        flight_id = rs.getString("flight_id");
    }
            System.out.println(flight_id);
    String noofpass = "SELECT COUNT(PASSENGER_ID) NO_OF_PASSENGER FROM RESERVATION WHERE RESERVATION_ID = '"+res_id+"'";
    rs = st.executeQuery(noofpass);
    while(rs.next()){
        nop = rs.getString("NO_OF_PASSENGER");
    }
            System.out.println(nop);
    String getairline = "SELECT AIRLINES FROM FLIGHT WHERE FLIGHT_ID = '"+flight_id+"'";
    rs = st.executeQuery(getairline);
    while(rs.next()){
        airline = rs.getString("AIRLINES");
    }
            System.out.println(airline);
            //select journey_id, fare from fare_info where reservation_id = 'F12_Economy92' 
    String jidfare = "SELECT JOURNEY_ID , FARE FROM FARE_INFO WHERE RESERVATION_ID = '"+res_id+"'";
    rs = st.executeQuery(jidfare);
    while(rs.next()){
        journey_id = rs.getString("JOURNEY_ID");
        total = rs.getString("FARE");
        
    }
            System.out.println(journey_id);
            System.out.println(total);
    
     //select source ,destination,distance_km from distance where journey_id = 'MUB-ALH' // source , destination , distance 
    String sdd = "SELECT SOURCE,DESTINATION,DISTANCE_KM FROM DISTANCE WHERE JOURNEY_ID = '"+journey_id+"'";
    rs = st.executeQuery(sdd);
    while(rs.next()){
        from = rs.getString("source");
        to =  rs.getString("destination");
        dis = rs.getString("distance_km");
        
    }
            System.out.println(from + " -----> "+to);
            System.out.println(dis);
    
    //select airport_name,airport_id from airport where city_name = 'Mumbai' // airport name write twice airport_id.
//select arrival_time from arrival where flight_id = 'F12' and airport_id = 'A8' // arrivaltime, departuretime write twice    
    String dairportget =  "SELECT AIRPORT_NAME,AIRPORT_ID,TIMEZONE FROM AIRPORT WHERE CITY_NAME ='"+from+"'";
    rs = st.executeQuery(dairportget);
    while(rs.next()){
        dairport = rs.getString("airport_name");
        daid = rs.getString("airport_id");
        dtimezone = rs.getString("timezone");
    }
    
            System.out.println(dairport);
            System.out.println(daid);
            
    String aairportget = "SELECT AIRPORT_NAME,AIRPORT_ID ,TIMEZONE FROM AIRPORT WHERE CITY_NAME ='"+to+"'";
    rs = st.executeQuery(aairportget);
    while(rs.next()){
        aairport = rs.getString("airport_name");
        aaid = rs.getString("airport_id");
        atimezone = rs.getString("timezone");
    }
    
            System.out.println(aairport);
            System.out.println(aaid);
            
    String dtimeget = "SELECT DEPARTURE_TIME FROM DEPARTURE WHERE FLIGHT_ID = '"+flight_id+"' AND AIRPORT_ID = '"+daid+"'";
    rs = st.executeQuery(dtimeget);
    while(rs.next()){
        dtime = rs.getString("departure_time");
    }
    
            System.out.println(dtime);
    String atimeget = "SELECT ARRIVAL_TIME FROM ARRIVAL WHERE FLIGHT_ID = '"+flight_id+"' AND AIRPORT_ID = '"+aaid+"'";
    rs = st.executeQuery(atimeget);
    while(rs.next()){
        atime = rs.getString("arrival_time");
    }
    
            System.out.println(atime);
            

//            //now setting all labels 
            flightidresult.setText(flight_id);
            airlineresult.setText(airline);
            detimeresult.setText(dtime + "  [" +dtimezone+"]");
            dairportname.setText(dairport);
            arrtime.setText(atime+ "  [" +atimezone+"]");
            arrairport.setText(aairport);
            noplb.setText(nop);
            amo.setText(total);
            userWelcomePanel.setVisible(false);
            searchResIdResultPanel.setVisible(true);
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        // search in fare_info table to see the results.
//        String findres = "SELECT "
        
        
    }//GEN-LAST:event_showReservationDetailsUserButtonActionPerformed

    private void myAccountUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myAccountUserButtonActionPerformed
       userWelcomePanel.setVisible(false);
       DatabaseConnection dbinfo = new DatabaseConnection();
       Statement st;
       ResultSet rs;
       String fname = null,lname = null ,dob = null,address = null,email = null;
        try {
            dbinfo.connect();
            st = dbinfo.conn.createStatement();
            String getuserinfo = "SELECT FIRST_NAME,LAST_NAME,EMAIL,DOB,ADDRESS FROM LOGIN WHERE USERNAME = '"+userTextField.getText()+"'";
            rs = st.executeQuery(getuserinfo);
            while(rs.next()){
            fname = rs.getString("first_name");
            lname = rs.getString("last_name");
            dob  = rs.getString("dob");
            address = rs.getString("address");
            email = rs.getString("email");
            }
            
            firstNamecCon.setText(fname);
            lnameCon.setText(lname);
            dateofBirthContainer.setText(dob);
            addressContainer.setText(address);
            EmailContainer.setText(email);
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       //select first_name,last_name,email,dob,address from login where username = 'atul05kumar'
       
      
       userInfoPanel.setVisible(true);
    }//GEN-LAST:event_myAccountUserButtonActionPerformed

    private void updateuserInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateuserInfoButtonActionPerformed
      userInfoPanel.setVisible(false);
              fnameupdate.setText(firstNamecCon.getText());
            lnameupdate.setText(lnameCon.getText());
            String strdate = dateofBirthContainer.getText();
            java.util.Date date = null;
        try {
            date = new SimpleDateFormat("dd-MMM-yyyy").parse(strdate);
        } catch (ParseException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        dateofbirthupdate.setDate(date);
        addressupdate.setText(addressContainer.getText());
        emailupdate.setText(EmailContainer.getText());
        oldpass.setText(null);
        newpass.setText(null);
        conpass.setText(null);



        updateUserInfoPanel.setVisible(true);

    }//GEN-LAST:event_updateuserInfoButtonActionPerformed

    private void userInfotoHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userInfotoHomeActionPerformed
       userInfoPanel.setVisible(false);
       searchByResIDuser.setText(null);
       userWelcomePanel.setVisible(true);
    }//GEN-LAST:event_userInfotoHomeActionPerformed

    private void emailupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailupdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailupdateActionPerformed

    private void conpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conpassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_conpassActionPerformed

    private void oldpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldpassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oldpassActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
  
        String f_name,l_name,dob_up="",add_up,email_up;
        char []oldpassarr = new char[20];
        char[]newpassarr = new char[20];
        String newpassstr ="", conpassstr="";
        char []conpassarr = new char[20];
        f_name = fnameupdate.getText();
        l_name = lnameupdate.getText();
        oldpassarr = oldpass.getPassword();
        boolean donotchangepass;
        if(oldpassarr.length == 0){
         donotchangepass = true;
        } else donotchangepass = false;
        newpassarr = newpass.getPassword();
        if(dateofbirthupdate.getDate() != null)
        dob_up = dateofbirthupdate.getDate().toString();
        
        add_up = addressupdate.getText();
        email_up = emailupdate.getText();
        conpassarr = conpass.getPassword();
        //every thing extracted
        if(f_name.length() == 0 || l_name.length() == 0 || add_up.length()==0|| email_up.length() == 0 ||dob_up.length() ==0){
            JOptionPane.showMessageDialog(null,"Please Fill All Fields!");
            return;
        }
        
        
        
        
        String dob_extract  = dob_up.substring(8, 10) +"-"+ dob_up.substring(4,7)+"-"+dob_up.substring(24,28);
        DatabaseConnection dbupdate = new DatabaseConnection();
        Statement st;
        ResultSet rs;
        
        String updatesql = null;
        String oldpassstr = new String(oldpassarr);
        newpassstr = new String(newpassarr);
        conpassstr = new String(conpassarr);
        
        
        try {
            
            dbupdate.connect();
            st = dbupdate.conn.createStatement();
            
            if(!donotchangepass){
            String getpass = "SELECT PASSWORD FROM LOGIN WHERE USERNAME = '"+userTextField.getText()+"' AND PASSWORD = '"+oldpassstr+"'";
            rs = st.executeQuery(getpass);
            
            if(rs.next()){
                System.out.println("Correct Password");
                
                
                if(conpassstr.equals(newpassstr)){
                    System.out.println("Password MAtched!"+conpassstr + " "+newpassstr);
                } else {
                    JOptionPane.showMessageDialog(null, "Confirm Password Not Matched!");
                    return;
                }
                
            } else {
                
                JOptionPane.showMessageDialog(null, "Incorrect Old Password!");
                return;
            
            }
             updatesql = "UPDATE LOGIN SET FIRST_NAME = '"+f_name+"',LAST_NAME = '"+l_name+"',DOB = '"
                    +dob_extract+"',EMAIL='"+email_up+"',ADDRESS='"+add_up+"',PASSWORD='"+newpassstr+"' WHERE USERNAME = '"+ userTextField.getText()+"'";
            
            
            }
            else {
                updatesql = "UPDATE LOGIN SET FIRST_NAME = '"+f_name+"',LAST_NAME = '"+l_name+"',DOB = '"
                        + dob_extract + "',EMAIL='" + email_up + "',ADDRESS='" + add_up + "' WHERE USERNAME = '"+ userTextField.getText()+"'";

            }
            
            st.execute(updatesql);
            updateUserInfoPanel.setVisible(false);
            userWelcomePanel.setVisible(true);
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void backtoHomefromResSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtoHomefromResSearchActionPerformed
       searchResIdResultPanel.setVisible(false);
       searchByResIDuser.setText(null);
       res_searchadmin.setText(null);
       if(userRadioButton.isSelected()){
       userWelcomePanel.setVisible(true);
       } else {
           adminWelcomePanel.setVisible(true);
       }
    }//GEN-LAST:event_backtoHomefromResSearchActionPerformed

    private void addFlightsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightsButtonActionPerformed
        adminWelcomePanel.setVisible(false);
        to_eco_seattxt.setText(null);
        to_busi_seattxt.setText(null);
        c_eco_s.setText(null);
        c_b_s.setText(null);
        
        addFlightPanel.setVisible(true);
        
    }//GEN-LAST:event_addFlightsButtonActionPerformed

    private void to_eco_seattxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to_eco_seattxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_to_eco_seattxtActionPerformed

    private void friActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_friActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_friActionPerformed

    private void sunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sunActionPerformed

    private void backtoHomefromaddFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtoHomefromaddFlightsActionPerformed
        addFlightPanel.setVisible(false);
        flightDetailsTextField.setText(null);
        adminWelcomePanel.setVisible(true);
    }//GEN-LAST:event_backtoHomefromaddFlightsActionPerformed

    private void addFlightnextstepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightnextstepButtonActionPerformed
        String flighttype, avail, airlines,aircraft;
        String[] days = new String[7];
        String total_eco,total_busi,c_busi,c_eco;
        flighttype = flighttypecombo.getSelectedItem().toString();
        avail = availcombo.getSelectedItem().toString();
        airlines = airlinestxt.getText();
        aircraft = aitcrafttxt.getText();
        total_eco = to_eco_seattxt.getText();
        total_busi = to_busi_seattxt.getText();
        c_busi = c_b_s.getText();
        c_eco = c_eco_s.getText();
        int dayindex = 0;
        if(mon.isSelected()){
            days[dayindex] = "MON";
            dayindex++;
        }
        if(tue.isSelected()){
            days[dayindex] = "TUE";
            dayindex++;
        }if(wed.isSelected()){
            days[dayindex] = "WED";
            dayindex++;
        }if(thu.isSelected()){
            days[dayindex] = "THU";
            dayindex++;
        }if(fri.isSelected()){
            days[dayindex] = "FRI";
            dayindex++;
        }if(sat.isSelected()){
            days[dayindex] = "SAT";
            dayindex++;
        }if(sun.isSelected()){
            days[dayindex] = "SUN";
            dayindex++;
        }
        if(flighttype.length() == 0 || avail.length() == 0 || airlines.length() ==0 ||  aircraft.length() == 0 || total_eco.length() == 0 ||total_busi.length() == 0|| c_busi.length() == 0 || c_eco.length() == 0 ||days.length == 0 ){
            JOptionPane.showMessageDialog(null,"Please Fill Proper Details!");
            return;
        }
        DatabaseConnection addfcon = new DatabaseConnection();
        Statement st;
        ResultSet rs;
        try {
            addfcon.connect();
            st = addfcon.conn.createStatement();
            //INSERT INTO FLIGHT VALUES (CONCAT('F',farji_seq.nextval),'typeofflight','avail',120,40,120,20,'Airlines');
            String addflightsql = "INSERT INTO FLIGHT VALUES ( CONCAT('F',flight_id_seq.nextval),'"+flighttype+"','"+avail+"',"+total_eco+","+total_busi+","+c_eco+","+c_busi+",'"+airlines+"',sysdate)";
            st.execute(addflightsql);
            System.out.println(addflightsql);
            //select MAX(flight_id) from flight
            //select flight_id from flight where time  = (select max(time) from flight)
            String getnewlyaddedflightid = "SELECT FLIGHT_ID FROM FLIGHT WHERE TIME = (SELECT MAX(TIME) FROM FLIGHT)";
            String retievedeflifhtid = null;
            rs = st.executeQuery(getnewlyaddedflightid);
            while(rs.next()){
                retievedeflifhtid = rs.getString("flight_id");
            }
            
            //insert into running_schedule values ('flghitid','day','aircraft',1324);
            for(int i = 0; i < dayindex;i++){
                String runn = "INSERT INTO RUNNING_SCHEDULE VALUES ('"+retievedeflifhtid+"','"+days[i]+"','"+aircraft+"',"+"0"+")";
                st.execute(runn);
                
            }
           
            DatabaseConnection search = new DatabaseConnection();
            String fromtosql;
            ResultSet fromto;
        
        try {
            
            search.connect();
            st = search.conn.createStatement();
            
            fromtosql = "SELECT DISTINCT source as fromto FROM DISTANCE union SELECT DISTINCT destination FROM DISTANCE";
            fromto = st.executeQuery(fromtosql);
            frcombo.removeAllItems();
            tocombo.removeAllItems();
            while(fromto.next()){
                frcombo.addItem(fromto.getString("fromto"));
                tocombo.addItem(fromto.getString("fromto"));
           
            }
            
            FID.setText(retievedeflifhtid);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            addFlightPanel.setVisible(false);
            dep.setText(null);
            arr.setText(null);
            far.setText(null);
           
            confirmFlightEntry.setVisible(true);
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_addFlightnextstepButtonActionPerformed

    private void confirmAddFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmAddFlightActionPerformed
        //now insert from where to where
            //go to next panel
            // ask for from and to/
            // get journey id from distance table
            // get airportid from airport table using from and to as city name
            // now ask for arrival and departure time
            //now insert in flight_fare flight_id,journey_id and fare
        String fr,to,depart,arrive,fareflight;
        fr = frcombo.getSelectedItem().toString();
        to = tocombo.getSelectedItem().toString();
        depart = dep.getText();
        arrive = arr.getText();
        fareflight = far.getText();
        if(fr.length() == 0 || to.length() == 0 || depart.length() == 0 || arrive.length() == 0 || fareflight.length() == 0){
            JOptionPane.showMessageDialog(null, "Please Fill All Details!");
            return;
        }
        String j_id = null,a_air = null,d_air = null;
        Statement st;
        ResultSet rs;
        DatabaseConnection confirm = new DatabaseConnection();
        try {
            confirm.connect();
            st = confirm.conn.createStatement();
            String getjourneyid = "SELECT JOURNEY_ID FROM DISTANCE WHERE SOURCE = '"+fr+"' AND DESTINATION = '"+to+"'";
            rs = st.executeQuery(getjourneyid);
            while(rs.next()){
                j_id = rs.getString("JOURNEY_ID");
            }
            //select airport_id from airport where city_name = 'Delhi'
            String getdepair = "SELECT AIRPORT_ID FROM AIRPORT WHERE CITY_NAME = '"+fr+"'";
            rs = st.executeQuery(getdepair);
            while(rs.next()){
                d_air = rs.getString("airport_id");
            }
            String getarrair = "SELECT AIRPORT_ID FROM AIRPORT WHERE CITY_NAME = '"+to+"'";
            rs = st.executeQuery(getarrair);
            while(rs.next()){
                a_air = rs.getString("airport_id");
            }
            
            // now final insert;
            String flightfare = "INSERT INTO FLIGHT_FARE VALUES ('"+FID.getText()+"','"+j_id+"',"+fareflight+")"; 
            st.execute(flightfare);
            // now update arrival and departure
            String depupdate = "INSERT INTO DEPARTURE VALUES ('"+FID.getText()+"','"+d_air+"','"+depart+"',"+0+")";
            st.execute(depupdate);
            String arrupdate = "INSERT INTO ARRIVAL VALUES ('"+FID.getText()+"','"+a_air+"','"+arrive+"',"+0+")";
            st.execute(arrupdate);
            
            
           res_searchadmin.setText(null);
           JOptionPane.showMessageDialog(null, "Flight Adddesd SuccessFully!");
           flightDetailsTextField.setText(null);
           confirmFlightEntry.setVisible(false);
            adminWelcomePanel.setVisible(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //select journey_id from distance where source = 'Delhi' and destination = 'Mumbai'
        
        
        
        
    }//GEN-LAST:event_confirmAddFlightActionPerformed

    private void reservationAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationAdminButtonActionPerformed
       /////////vdbdfbdfb
        adminWelcomePanel.setVisible(false);
        searchFlightsPanel.setVisible(true);
        DatabaseConnection search = new DatabaseConnection();
        String fromtosql;
        ResultSet fromto;
        Statement st;
        try {
            
            search.connect();
            st = search.conn.createStatement();
            
            fromtosql = "SELECT DISTINCT source as fromto FROM DISTANCE union SELECT DISTINCT destination FROM DISTANCE";
            fromto = st.executeQuery(fromtosql);
            fromComboBox.removeAllItems();
            toComboBox.removeAllItems();
            while(fromto.next()){
                fromComboBox.addItem(fromto.getString("fromto"));
                toComboBox.addItem(fromto.getString("fromto"));
           
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reservationAdminButtonActionPerformed

    private void confirmReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmReservationActionPerformed
        // TODO add your handling code here:
        
        TableModel tm = passengerDetailsTable.getModel();
        
         if(passengerDetailsTable.isEditing()){
           passengerDetailsTable.getCellEditor().stopCellEditing();
        }
        
        DatabaseConnection pay = new DatabaseConnection();
        Statement st;
        ResultSet rs;
        try {
            pay.connect();
            st = pay.conn.createStatement();
            
           String sql;

                sumFlightID.setText((String) searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 0));
                sumAirlinelb.setText((String) searchResultTable.getValueAt(searchResultTable.getSelectedRow(), 4));
                sumArrivelb.setText(ArrivalReviewlb.getText());
                sumDepartslb.setText(timeRiviewlb.getText());
                sumNoofPasslb.setText(passengerscountTextField.getText());
                sumAmountlb.setText(totalContainer.getText());
                sql = "SELECT AIRPORT_NAME FROM AIRPORT WHERE CITY_NAME = '"+sourceReviewlb.getText()+"'";
                rs = st.executeQuery(sql);
                while(rs.next()){
                    sumAirportSource.setText(rs.getString("airport_name"));
                }
                sql = "SELECT AIRPORT_NAME FROM AIRPORT WHERE CITY_NAME = '"+destinationReviewlb.getText()+"'";
                rs = st.executeQuery(sql);
                while(rs.next()){
                    sumAirportArrivelb.setText(rs.getString("airport_name"));
                }
                
                String cl;
                if(classComboBox.getSelectedItem().toString().equals("Economy")){
                    cl = "Economy";
                } else cl = "Business";
                //here payment successfull now creating reservaion id
           
                String journeyid = "SELECT JOURNEY_ID FROM DISTANCE WHERE SOURCE = '" + sourceReviewlb.getText() + "' and destination = '" + destinationReviewlb.getText() + "'";
                rs = st.executeQuery(journeyid);
                while (rs.next()) {
                    journeyid = rs.getString("journey_id");
                }
                
                //select re from (select reservation_id re, rownum r from fare_info  
                //where reservation_id like 'F12_Business%' order by reservation_id desc) where r = 1;
                
                
                String res = sumFlightID.getText() + "_"+ cl;
               // insert into fare_info values (concat('F1_ECO',FARJI_SEQ.nextval),'12345','LKO-DEL')
                String fare_info = "INSERT INTO FARE_INFO VALUES (concat('"+res+"',res_id_seq.nextval),'"+sumAmountlb.getText()+"','"+journeyid+"',SYSDATE)";
                st.execute(fare_info);
                System.out.println(fare_info);
                //resevation id renerated;
                String reservation_id;
                //again retrieve pasenger id.
                //select reservation_id from fare_info where time = (select  max(time) from fare_info)
                //reservation_id = "SELECT RE FROM (SELECT RESERVATION_ID RE ,ROWNUM R FROM FARE_INFO WHERE RESERVATION_ID LIKE '"+res+"%' ORDER BY TIME DESC) WHERE R = 1";
                reservation_id = "SELECT RESERVATION_ID FROM FARE_INFO WHERE TIME = (SELECT MAX(TIME) FROM FARE_INFO)";
                System.out.println(reservation_id);
                rs = st.executeQuery(reservation_id);
                while(rs.next()){
                    reservation_id = rs.getString("RESERVATION_ID");
                }
                System.out.println(reservation_id); // got reservation id
                //now insert it in user_reservation table // history
                
                //  NOW INSERT IN RESERVATION TABLE
                // NEED TO CALULATE SEAT NUMBER
                int current_eco_seat=0;
                int current_busi_seat=0;
                int to_e = 0,to_b=0;
                String findseats;
                //select current_eco_seat,current_busi_seat  from flight where flight_id = 'F1'
                findseats = "SELECT TOTAL_ECO_SEAT,TOTAL_BUSINESS_SEAT, CURRENT_ECO_SEAT,CURRENT_BUSI_SEAT FROM FLIGHT WHERE FLIGHT_ID = '"+sumFlightID.getText()+"'";
                System.out.println(findseats);
                rs = st.executeQuery(findseats);
                
                while(rs.next()){
                    to_e = Integer.parseInt(rs.getString("TOTAL_ECO_SEAT"));
                    to_b= Integer.parseInt(rs.getString("TOTAL_BUSINESS_SEAT"));
                    current_eco_seat = Integer.parseInt(rs.getString("CURRENT_ECO_SEAT"));
                    current_busi_seat = Integer.parseInt(rs.getString("CURRENT_BUSI_SEAT"));
                    
                }
                // now enter in reservation table
                
                //INSERT INTO RESERVATION VALUES ('F12_Business22',farji_seq.nextval,12,'f2','business');
                int p_seat_num;
                String restable;
                for (int i = 0; i < Integer.parseInt(passengerscountTextField.getText()); i++) {
                    if(cl.equals("Economy")){
                        p_seat_num = to_e - current_eco_seat + 1;
                        current_eco_seat--;
                        restable = "INSERT INTO RESERVATION VALUES ('"+reservation_id+"', CONCAT('P',passenger_id_seq.nextval),'"+"E"+p_seat_num+"','"+sumFlightID.getText()+"','"+cl+"')";
                    } else {
                        p_seat_num = to_b - current_busi_seat + 1;
                        current_busi_seat--;
                        restable = "INSERT INTO RESERVATION VALUES ('"+reservation_id+"', CONCAT('P',passenger_id_seq.nextval),'"+"B"+p_seat_num+"','"+sumFlightID.getText()+"','"+cl+"')";
                    }
                    System.out.println(restable);
                    st.execute(restable); 
                }
                
                //get passenger id for this reservation
                //select passenger_id from reservation where reservation_id = 'F12_Economy41'
                String getp_id;
                getp_id = "SELECT PASSENGER_ID FROM RESERVATION WHERE RESERVATION_ID = '"+reservation_id+"'";
                rs = st.executeQuery(getp_id);
                String [] p_id = new String[10];
                int index = 0;
                while(rs.next()){
                    p_id[index] = rs.getString("passenger_id");
                    index++;
                }
                // update current available seat numbers
                //update reservation set seat_number = 'B2' where reservation_id = 'F12_Business32';
                String updateseat = "UPDATE FLIGHT SET CURRENT_ECO_SEAT = "+current_eco_seat+", CURRENT_BUSI_SEAT = "+current_busi_seat+" WHERE FLIGHT_ID = '"+sumFlightID.getText()+"'";
                st.execute(updateseat);
                Statement updateAuth;
               updateAuth = pay.conn.createStatement();
                // insert into passenger table
                for (int i = 0; i < Integer.parseInt(passengerscountTextField.getText()); i++) {
                    //updateAuth = pay.conn.createStatement();
                    //INSERT INTO PASSENGER VALUES(CONCAT('P',farji_seq.nextval),'Atul','Kumar','12/12/1234','Lucknow','atul05kumar@gmail.com')
                    String sqlpassenger = "INSERT INTO PASSENGER VALUES ('" + p_id[i] + "','"
                            + tm.getValueAt(i, 0).toString() + "','" + tm.getValueAt(i, 1).toString() + "','" + tm.getValueAt(i, 2).toString() + "','" + tm.getValueAt(i, 3).toString() + "','" + tm.getValueAt(i, 4).toString() + "')";
                    System.out.print(sqlpassenger);
         //      //     //insert into passenger_identification values ('passenger_id','td_type',12345);
                 String updateauthsql = "INSERT INTO PASSENGER_IDENTIFICATION VALUES ('"+p_id[i]+"','"+tm.getValueAt(i, 5).toString()+"',"+tm.getValueAt(i, 6).toString()+")";
                    st.execute(sqlpassenger);
                    System.out.println(updateauthsql);
                updateAuth.execute(updateauthsql);
                   
                }
                
                passengerDetailsPanel.setVisible(false);
                
                summaryPanel.setVisible(true);
          
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_confirmReservationActionPerformed

    private void GoresAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoresAdminActionPerformed
        // TODO add your handling code here:
        
        
        String res_id;
        res_id = res_searchadmin.getText();
        DatabaseConnection searchres = new DatabaseConnection();
        Statement st;
        ResultSet rs;
        try {
            searchres.connect();
            st = searchres.conn.createStatement();
            //this query generates table model for passenger details.
            //select passenger.first_name,seat_number,class from reservation,passenger where reservation_id = 'F12_Economy74' and passenger.passenger_id = reservation.passenger_id
           //select reservation_id from user_reservation where username = 'atul05kumar' and reservation_id = 'F12_Economy74'
           
            residresult.setText(res_id);
            //table model bulder
            //select first_name,seat_number,class,id_type,id_number from reservation,passenger_identification,passenger
            //where reservation_id = 'F12_Economy92' and reservation.passenger_id = passenger_identification.passenger_id 
            //and passenger.passenger_id= reservation.passenger_id ;
            String updatetablemodel = "SELECT FIRST_NAME Name,SEAT_NUMBER Seat_Number,CLASS Class,ID_TYPE ID_Type,ID_NUMBER ID_Number "
                    +"FROM RESERVATION,PASSENGER_IDENTIFICATION,PASSENGER WHERE RESERVATION_ID = '"+res_id+"' AND RESERVATION.PASSENGER_ID = PASSENGER_IDENTIFICATION.PASSENGER_ID "
                    +"AND PASSENGER.PASSENGER_ID = RESERVATION.PASSENGER_ID";
            System.out.println(updatetablemodel);
            rs = st.executeQuery(updatetablemodel);
            passdetail.setModel(DbUtils.resultSetToTableModel(rs));            
//select distinct flight_id from reservation where reservation_id = 'F12_Economy92'  // flight_id
//select count(passenger_id) from reservation where reservation_id = 'F12_Economy92' // count no. of passenger
//select airlines from flight where flight_id = 'F12' // airline
//select journey_id, fare from fare_info where reservation_id = 'F12_Economy92' // journey_id, total_fare, 
//select source ,destination,distance_km from distance where journey_id = 'MUB-ALH' // source , destination , distance 
//select airport_name,airport_id from airport where city_name = 'Mumbai' // airport name write twice airport_id.
//select arrival_time from arrival where flight_id = 'F12' and airport_id = 'A8' // arrivaltime, departuretime write twice
           
    String journey_id = null,flight_id = null,airline = null,dtime = null,dairport = null,daid = null,atime = null,aairport = null,aaid = null,dis = null,nop = null,total = null,dtimezone = null,atimezone = null,from = null,to = null;
    String getflightid = "SELECT DISTINCT FLIGHT_ID FROM RESERVATION WHERE RESERVATION_ID = '"+res_id+"'";
    rs = st.executeQuery(getflightid);
    while(rs.next()){
        flight_id = rs.getString("flight_id");
    }
            System.out.println(flight_id);
    String noofpass = "SELECT COUNT(PASSENGER_ID) NO_OF_PASSENGER FROM RESERVATION WHERE RESERVATION_ID = '"+res_id+"'";
    rs = st.executeQuery(noofpass);
    while(rs.next()){
        nop = rs.getString("NO_OF_PASSENGER");
    }
            System.out.println(nop);
    String getairline = "SELECT AIRLINES FROM FLIGHT WHERE FLIGHT_ID = '"+flight_id+"'";
    rs = st.executeQuery(getairline);
    while(rs.next()){
        airline = rs.getString("AIRLINES");
    }
            System.out.println(airline);
            //select journey_id, fare from fare_info where reservation_id = 'F12_Economy92' 
    String jidfare = "SELECT JOURNEY_ID , FARE FROM FARE_INFO WHERE RESERVATION_ID = '"+res_id+"'";
    rs = st.executeQuery(jidfare);
    while(rs.next()){
        journey_id = rs.getString("JOURNEY_ID");
        total = rs.getString("FARE");
        
    }
            System.out.println(journey_id);
            System.out.println(total);
    
     //select source ,destination,distance_km from distance where journey_id = 'MUB-ALH' // source , destination , distance 
    String sdd = "SELECT SOURCE,DESTINATION,DISTANCE_KM FROM DISTANCE WHERE JOURNEY_ID = '"+journey_id+"'";
    rs = st.executeQuery(sdd);
    while(rs.next()){
        from = rs.getString("source");
        to =  rs.getString("destination");
        dis = rs.getString("distance_km");
        
    }
            System.out.println(from + " -----> "+to);
            System.out.println(dis);
    
    //select airport_name,airport_id from airport where city_name = 'Mumbai' // airport name write twice airport_id.
//select arrival_time from arrival where flight_id = 'F12' and airport_id = 'A8' // arrivaltime, departuretime write twice    
    String dairportget =  "SELECT AIRPORT_NAME,AIRPORT_ID,TIMEZONE FROM AIRPORT WHERE CITY_NAME ='"+from+"'";
    rs = st.executeQuery(dairportget);
    while(rs.next()){
        dairport = rs.getString("airport_name");
        daid = rs.getString("airport_id");
        dtimezone = rs.getString("timezone");
    }
    
            System.out.println(dairport);
            System.out.println(daid);
            
    String aairportget = "SELECT AIRPORT_NAME,AIRPORT_ID ,TIMEZONE FROM AIRPORT WHERE CITY_NAME ='"+to+"'";
    rs = st.executeQuery(aairportget);
    while(rs.next()){
        aairport = rs.getString("airport_name");
        aaid = rs.getString("airport_id");
        atimezone = rs.getString("timezone");
    }
    
            System.out.println(aairport);
            System.out.println(aaid);
            
    String dtimeget = "SELECT DEPARTURE_TIME FROM DEPARTURE WHERE FLIGHT_ID = '"+flight_id+"' AND AIRPORT_ID = '"+daid+"'";
    rs = st.executeQuery(dtimeget);
    while(rs.next()){
        dtime = rs.getString("departure_time");
    }
    
            System.out.println(dtime);
    String atimeget = "SELECT ARRIVAL_TIME FROM ARRIVAL WHERE FLIGHT_ID = '"+flight_id+"' AND AIRPORT_ID = '"+aaid+"'";
    rs = st.executeQuery(atimeget);
    while(rs.next()){
        atime = rs.getString("arrival_time");
    }
    
            System.out.println(atime);
            

//            //now setting all labels 
            flightidresult.setText(flight_id);
            airlineresult.setText(airline);
            detimeresult.setText(dtime + "  [" +dtimezone+"]");
            dairportname.setText(dairport);
            arrtime.setText(atime+ "  [" +atimezone+"]");
            arrairport.setText(aairport);
            noplb.setText(nop);
            amo.setText(total);
            adminWelcomePanel.setVisible(false);
            searchResIdResultPanel.setVisible(true);
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        // search in fare_info table to see the results.
//        String findres = "SELECT "
        
    }//GEN-LAST:event_GoresAdminActionPerformed

    private void myAccountAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myAccountAdminButtonActionPerformed
        // direct to new panel called adminifon
        
        adminWelcomePanel.setVisible(false);
        String emailadmin = null;
       String adminna = null;
        DatabaseConnection admininfo = new DatabaseConnection();
        try {
            Statement st;
            ResultSet rs;
           
            admininfo.connect();
            st = admininfo.conn.createStatement();
            String em = "SELECT NAME ,EMAIL FROM ADMIN WHERE USERNAME = '"+userTextField.getText()+"'";
            rs = st.executeQuery(em);
            while(rs.next()){
                emailadmin = rs.getString("EMAIL");
                adminna = rs.getString("NAME");
            }
            
            adminemail.setText(emailadmin);
            adminname.setText(adminna);
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        

        adminInfoPanel.setVisible(true);
    }//GEN-LAST:event_myAccountAdminButtonActionPerformed

    private void backtohomefromadmininfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtohomefromadmininfoActionPerformed
        // TODO add your handling code here:
        
     adminInfoPanel.setVisible(false);
     
     
     adminWelcomePanel.setVisible(true);
    }//GEN-LAST:event_backtohomefromadmininfoActionPerformed

    private void updateAdminInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAdminInfoActionPerformed
       String updatename,updateemail;
       updatename = anametxt.getText();
       updateemail = aemailtxt.getText();
       char []old = new char[20];
       char []ne = new char[20];
       char []con = new char[20];
       
       if(updatename.length() == 0|| updateemail.length() == 0){
           JOptionPane.showMessageDialog(null, "Please Fill all the Fields");
           return;
       }
       
       DatabaseConnection updateadmin = new DatabaseConnection();
       Statement st;
       ResultSet rs;
       String datapass = null;
       old = aoldtxt.getPassword();
       ne = anewtxt.getPassword();
       con = acontxt.getPassword();
       String oldstr,newstr,constr;
       oldstr = new String(old);
       newstr = new String(ne);
       constr = new String(con);
       
        try {
            updateadmin.connect();
            st = updateadmin.conn.createStatement();
            String passget = "SELECT PASSWORD FROM ADMIN WHERE USERNAME = '"+userTextField.getText()+"'";
            rs = st.executeQuery(passget);
            while(rs.next()){
                datapass = rs.getString("password");
            }
         if(old.length == 0 && ne.length == 0 && con.length == 0){
            oldstr = datapass;
            newstr = datapass;
            constr = datapass;
         } 
               if (!oldstr.equals(datapass)) {
                JOptionPane.showMessageDialog(null, "Incorrect Old Password!");
                
            } else {
                   if (newstr.equals(constr)) {
                       String Insert = "UPDATE ADMIN SET NAME = '" + updatename + "', EMAIL ='" + updateemail + "', PASSWORD ='" + newstr + "' WHERE USERNAME = '" + userTextField.getText() + "'";
                       st.execute(Insert);
                       welcomeAdminLabel.setText("Welcome " + updatename + "[ADMIN]");
                       adminInfoPanel.setVisible(false);
                       adminWelcomePanel.setVisible(true);
                   } else JOptionPane.showMessageDialog(null, "Passwords do not Match!");
            }
                
               
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

   
       
    }//GEN-LAST:event_updateAdminInfoActionPerformed

    private void cancelationUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelationUserButtonActionPerformed
                userWelcomePanel.setVisible(false);
                residcon.setText(cancelResId.getText());
               DatabaseConnection f = new DatabaseConnection();
        try {
            f.connect();
            Statement st = f.conn.createStatement();
            ResultSet rs;
            String fidget = "SELECT DISTINCT FLIGHT_ID FROM RESERVATION WHERE RESERVATION_ID = '"+cancelResId.getText()+"'";
            rs = st.executeQuery(fidget);
            while(rs.next()){
                String fidgotnow = rs.getString("flight_id");
                fidcon.setText(fidgotnow);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
               
                
                cancelation.setVisible(true);
           
        
    }//GEN-LAST:event_cancelationUserButtonActionPerformed

    private void backtohomefromcancelationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtohomefromcancelationActionPerformed
        cancelation.setVisible(false);
        cancelResId.setText(null);
        userWelcomePanel.setVisible(true);
    }//GEN-LAST:event_backtohomefromcancelationActionPerformed

    private void confirmCancelationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmCancelationActionPerformed
        
        //DELETE FROM table_name
//WHERE some_column=some_value;//
        DatabaseConnection cancel = new DatabaseConnection();
        Statement st;
        ResultSet rs;
        try {
            cancel.connect();
            st = cancel.conn.createStatement();
            String findvalid = "SELECT RESERVATION_ID FROM USER_RESERVATION WHERE RESERVATION_ID = '"+cancelResId.getText()+"'";
            rs = st.executeQuery(findvalid);
            if(!rs.next()){
                JOptionPane.showMessageDialog(null, "Invalid Reservation ID!");
                return;
            }
            String usr_res = "DELETE FROM USER_RESERVATION WHERE RESERVATION_ID = '"+cancelResId.getText()+"'";
            st.execute(usr_res);
            String[] pass_id = new String[20];
            //select passenger_id from reservation where reservation_id = 'F12_Business54'
            String getpass_id = "SELECT PASSENGER_ID,CLASS,FLIGHT_ID  FROM RESERVATION WHERE RESERVATION_ID = '"+cancelResId.getText()+"'";
            rs = st.executeQuery(getpass_id);
            int index = 0;
            String classget = null,flid = null;
            while(rs.next()){
                pass_id[index] = rs.getString("passenger_id");
                index++;
                classget = rs.getString("class");
                flid = rs.getString("flight_id");
            }
            String delresvationtable = "DELETE FROM RESERVATION WHERE RESERVATION_ID = '"+cancelResId.getText()+"'";
            st.execute(delresvationtable);
            Statement st2 = cancel.conn.createStatement();
            for(int i = 0; i < index; i++){
                String delpass = "DELETE FROM PASSENGER WHERE PASSENGER_ID ='"+pass_id[i]+"'";
                String pass_iden_del = "DELETE FROM PASSENGER_IDENTIFICATION WHERE PASSENGER_ID = '"+pass_id[i]+"'";
                st.execute(delpass);
                st2.execute(pass_iden_del);
            }
            
            String getfare = "SELECT FARE FROM FARE_INFO WHERE RESERVATION_ID = '"+cancelResId.getText()+"'";
            String gotfare = null;
            rs = st.executeQuery(getfare);
            while(rs.next()){
                gotfare = rs.getString("fare");
            }
            String fareinfodel = "DELETE FROM FARE_INFO WHERE RESERVATION_ID = '"+cancelResId.getText()+"'";
            st.execute(fareinfodel);
            
            if(classget.equals("Economy")){

                //UPDATE FLIGHT SET TOTAL_ECO_SEAT = (TOTAL_ECO_SEAT  + 3) WHERE FLIGHT_ID = 'F99'
                String updateseat = "UPDATE FLIGHT SET CURRENT_ECO_SEAT = (CURRENT_ECO_SEAT + "+index+") WHERE FLIGHT_ID = '"+flid+"'";
                st.execute(updateseat);
            } else if(classget.equals("Business")){
                    String updateseat = "UPDATE FLIGHT SET CURRENT_BUSI_SEAT = (CURRENT_BUSI_SEAT + "+index+") WHERE FLIGHT_ID = '"+flid+"'";
                st.execute(updateseat);
            }
            int refund = Integer.parseInt(gotfare)*70/100;
            confirmationmessage.setText("             Booking Cancelled Succssfully! \n Amount Refunded : Rs. "+refund);
            
            
            
            
            
            
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_confirmCancelationActionPerformed

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        
        String flightID = flightDetailsTextField.getText();
        if(flightID.length() == 0){
            JOptionPane.showMessageDialog(null,"Please Fill The Flight ID first!");
            return;
        }
        String type=null,avai = null,t_e=null,t_b=null,c_e=null,c_b=null,air=null;
        String fdetail = "SELECT * FROM FLIGHT WHERE FLIGHT_ID = '"+flightID+"'";
        DatabaseConnection fl = new DatabaseConnection();
        try {
            fl.connect();
            Statement st;
            st = fl.conn.createStatement();
            ResultSet rs;
            rs = st.executeQuery(fdetail);
            while(rs.next()){
                type = rs.getString("TYPE_OF_FLIGHT");
                avai = rs.getString("AVAILABILITY");
                t_e = rs.getString("TOTAL_ECO_SEAT");
                t_b  = rs.getString("TOTAL_BUSINESS_SEAT");
                c_e  = rs.getString("CURRENT_ECO_SEAT");
                c_b = rs.getString("CURRENT_BUSI_SEAT");
                air = rs.getString("AIRLINES");
            }
            
            fidadmin.setText(flightID);
            avadmin.setText(avai);
            tyadmin.setText(type);
            tesadmin.setText(t_e);
            tbsadmin.setText(t_b);
            cesadmin.setText(c_e);
            cbsadmin.setText(c_b);
            airlinesadmin.setText(air);
            adminWelcomePanel.setVisible(false);
            flightDetail.setVisible(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(loginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
    }//GEN-LAST:event_goButtonActionPerformed

    private void backtohomefromflightdetaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtohomefromflightdetaisActionPerformed
                    flightDetail.setVisible(false);
                    adminWelcomePanel.setVisible(true);// TODO add your handling code here:
        
    }//GEN-LAST:event_backtohomefromflightdetaisActionPerformed

    private void homeSearchFlightsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeSearchFlightsButtonActionPerformed
      if(userRadioButton.isSelected()){
          searchFlightsPanel.setVisible(false);
          searchByResIDuser.setText(null);
          cancelResId.setText(null);
          flightDetailsTextField.setText(null);
          userWelcomePanel.setVisible(true);
      }else if(adminRadioButton.isSelected()){
          searchFlightsPanel.setVisible(false);
          res_searchadmin.setText(null);
          
          adminWelcomePanel.setVisible(true);
      }
    }//GEN-LAST:event_homeSearchFlightsButtonActionPerformed

    private void homeInSearchResultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeInSearchResultsButtonActionPerformed
        // TODO add your handling code here:
        if(userRadioButton.isSelected()){
            searchResultsPanel.setVisible(false);
            searchByResIDuser.setText(null);
          cancelResId.setText(null);
            userWelcomePanel.setVisible(true);
        } else {
            searchResultsPanel.setVisible(false);
            res_searchadmin.setText(null);
            flightDetailsTextField.setText(null);
            adminWelcomePanel.setVisible(true);
        }
    }//GEN-LAST:event_homeInSearchResultsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AirlineReviewlb;
    private javax.swing.JLabel ArrivalReviewlb;
    private javax.swing.JLabel EmailContainer;
    private javax.swing.JLabel FID;
    private javax.swing.JLabel FlightInfoFrom;
    private javax.swing.JButton GoresAdmin;
    private javax.swing.JLabel Headline;
    private javax.swing.JLabel InfoAddress;
    private javax.swing.JPanel RiviewFlightDetailsPanel;
    private javax.swing.JLabel acc;
    private javax.swing.JPasswordField acontxt;
    private javax.swing.JPanel addFlightPanel;
    private javax.swing.JButton addFlightnextstepButton;
    private javax.swing.JButton addFlightsButton;
    private javax.swing.JLabel addflightlb;
    private javax.swing.JLabel address;
    private javax.swing.JLabel addressContainer;
    private javax.swing.JTextArea addressRegisterTxt;
    private javax.swing.JLabel addressReglb;
    private javax.swing.JTextArea addressupdate;
    private javax.swing.JPanel adminInfoPanel;
    private javax.swing.JRadioButton adminRadioButton;
    private javax.swing.JPanel adminWelcomePanel;
    private javax.swing.JLabel adminemail;
    private javax.swing.JLabel adminname;
    private javax.swing.ButtonGroup adminusergroup;
    private javax.swing.JTextField aemailtxt;
    private javax.swing.JLabel airlineresult;
    private javax.swing.JLabel airlinesadmin;
    private javax.swing.JTextField airlinestxt;
    private javax.swing.JTextField aitcrafttxt;
    private javax.swing.JLabel amo;
    private javax.swing.JLabel amountContainerlb;
    private javax.swing.JLabel amountDueLabel;
    private javax.swing.JTextField anametxt;
    private javax.swing.JPasswordField anewtxt;
    private javax.swing.JPasswordField aoldtxt;
    private javax.swing.JTextField arr;
    private javax.swing.JLabel arrairport;
    private javax.swing.JLabel arrtime;
    private javax.swing.JLabel avadmin;
    private javax.swing.JComboBox availcombo;
    private javax.swing.JButton backToSearchlb;
    private javax.swing.JButton backToTicketSummaryButton;
    private javax.swing.JButton backtoHomefromResSearch;
    private javax.swing.JButton backtoHomefromaddFlights;
    private javax.swing.JButton backtohomefromadmininfo;
    private javax.swing.JButton backtohomefromcancelation;
    private javax.swing.JButton backtohomefromflightdetais;
    private javax.swing.JButton bookNowButton;
    private javax.swing.JButton bookingsAdminButton;
    private javax.swing.JTextField c_b_s;
    private javax.swing.JTextField c_eco_s;
    private javax.swing.JLabel can;
    private javax.swing.JTextField cancelResId;
    private javax.swing.JPanel cancelation;
    private javax.swing.JButton cancelationAdminButton;
    private javax.swing.JButton cancelationUserButton;
    private javax.swing.JLabel cardNumberLabel;
    private javax.swing.JTextField cardNumberTextField;
    private javax.swing.JLabel cardPasswordLabel;
    private javax.swing.JPasswordField cardPasswordTextField;
    private javax.swing.JComboBox cardTypeComboBox;
    private javax.swing.JLabel cardTypelabel;
    private javax.swing.JLabel cbsadmin;
    private javax.swing.JLabel cesadmin;
    private javax.swing.JLabel chpassReglb;
    private javax.swing.JComboBox classComboBox;
    private javax.swing.JLabel classLabel;
    private javax.swing.JLabel conPassReglb;
    private javax.swing.JButton confirmAddFlight;
    private javax.swing.JButton confirmCancelation;
    private javax.swing.JPanel confirmFlightEntry;
    private javax.swing.JPasswordField confirmPassRegTxt;
    private javax.swing.JButton confirmReservation;
    private javax.swing.JLabel confirmationmessage;
    private javax.swing.JLabel confirmpasslb;
    private javax.swing.JPasswordField conpass;
    private javax.swing.JButton continueToPaymentButton;
    private javax.swing.JButton continuelb;
    private javax.swing.JLabel dairportname;
    private javax.swing.JLabel dateofBirthContainer;
    private com.toedter.calendar.JDateChooser dateofbirthupdate;
    private javax.swing.JLabel dayDateReviewlb;
    private javax.swing.JTextField dep;
    private com.toedter.calendar.JDateChooser departureDateChooser;
    private javax.swing.JLabel departureDateLabel;
    private javax.swing.JLabel destinationReviewlb;
    private javax.swing.JLabel detimeresult;
    private javax.swing.JLabel dob;
    private com.toedter.calendar.JDateChooser dobChooser;
    private javax.swing.JLabel dobReglb;
    private javax.swing.JLabel durationReviewlb;
    private javax.swing.JLabel email;
    private javax.swing.JTextField emailRegisterTxt;
    private javax.swing.JLabel emailReglb;
    private javax.swing.JTextField emailupdate;
    private javax.swing.JTextField far;
    private javax.swing.JLabel fidadmin;
    private javax.swing.JLabel fidcon;
    private javax.swing.JLabel fillInfoLabel;
    private javax.swing.JTextField firstNameRegisterTxt;
    private javax.swing.JLabel firstNameReglb;
    private javax.swing.JLabel firstNamecCon;
    private javax.swing.JLabel firstname;
    private javax.swing.JTextField flighIDTextField;
    private javax.swing.JPanel flightDetail;
    private javax.swing.JLabel flightDetailsBack;
    private javax.swing.JLabel flightDetailsLabel;
    private javax.swing.JTextField flightDetailsTextField;
    private javax.swing.JLabel flightInfoJlabel;
    private javax.swing.JLabel flightInfoto;
    private javax.swing.ButtonGroup flightTypeGroup;
    private javax.swing.JLabel flightidresult;
    private javax.swing.JLabel flightinfodate;
    private javax.swing.JLabel flightinfoday;
    private javax.swing.JComboBox flighttypecombo;
    private javax.swing.JTextField fnameupdate;
    private javax.swing.JButton forgotPasswordCheckBox;
    private javax.swing.JComboBox frcombo;
    private javax.swing.JCheckBox fri;
    private javax.swing.JComboBox fromComboBox;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JButton goButton;
    private javax.swing.JButton homeAdminButton;
    private javax.swing.JButton homeInSearchResultsButton;
    private javax.swing.JButton homeSearchFlightsButton;
    private javax.swing.JLabel horizontalLinelb;
    private javax.swing.JLabel infoDateOfBirth;
    private javax.swing.JLabel infoEmail;
    private javax.swing.JLabel infoUserName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lastNameRegisterTxt;
    private javax.swing.JLabel lastNameReglb;
    private javax.swing.JLabel lname;
    private javax.swing.JLabel lnameCon;
    private javax.swing.JTextField lnameupdate;
    private javax.swing.JLabel loginAs;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginPageBackground;
    private javax.swing.JPanel loginPagePanel;
    private javax.swing.JButton logoutAdminButton;
    private javax.swing.JButton logoutUserButton;
    private javax.swing.JButton makePaymentButton;
    private javax.swing.JLabel mandatoryLabel;
    private javax.swing.JCheckBox mon;
    private javax.swing.JButton myAccountAdminButton;
    private javax.swing.JButton myAccountUserButton;
    private javax.swing.JLabel newUserLabel;
    private javax.swing.JPasswordField newpass;
    private javax.swing.JLabel newpasslb;
    private javax.swing.JLabel noofflights;
    private javax.swing.JLabel noplb;
    private javax.swing.JPasswordField oldpass;
    private javax.swing.JLabel oldpasslb;
    private javax.swing.JPasswordField passRegisterTxt;
    private javax.swing.JPasswordField passTextField;
    private javax.swing.JTable passdetail;
    private javax.swing.JLabel passengerDetailsLabel;
    private javax.swing.JPanel passengerDetailsPanel;
    private javax.swing.JTable passengerDetailsTable;
    private javax.swing.JLabel passengersLabel;
    private javax.swing.JTextField passengerscountTextField;
    private javax.swing.JLabel passlb;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPanel paymentPanel;
    private javax.swing.JLabel pleaseLogin;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton registerHereButton;
    private javax.swing.JPanel registrationPanel;
    private javax.swing.JTextField res_searchadmin;
    private javax.swing.JLabel resd;
    private javax.swing.JButton reservationAdminButton;
    private javax.swing.JLabel reservationAdminLabel;
    private javax.swing.JPanel reservationAdminPanel;
    private javax.swing.JButton reservationAdminSearchButton;
    private javax.swing.JTextField reservationAdminTextField;
    private javax.swing.JLabel reservationDetailsLabel;
    private javax.swing.JLabel reservationDetailsUserLabel;
    private javax.swing.JLabel residcon;
    private javax.swing.JLabel residresult;
    private javax.swing.JLabel reviewFlightDetailsBackLabel;
    private javax.swing.JLabel reviewFlightDetailsLabel;
    private javax.swing.JCheckBox sat;
    private javax.swing.JTextField searchByResIDuser;
    private javax.swing.JLabel searchFlightLabel;
    private javax.swing.JButton searchFlightsAdminButton;
    private javax.swing.JButton searchFlightsButton;
    private javax.swing.JPanel searchFlightsPanel;
    private javax.swing.JButton searchFlightsUserButton;
    private javax.swing.JPanel searchResIdResultPanel;
    private javax.swing.JTable searchResultTable;
    private javax.swing.JPanel searchResultsPanel;
    private javax.swing.JLabel searchResultslabel;
    private javax.swing.JButton showReservationDetailsUserButton;
    private javax.swing.JLabel sourceReviewlb;
    private javax.swing.JLabel sumAirlinelb;
    private javax.swing.JLabel sumAirportArrivelb;
    private javax.swing.JLabel sumAirportSource;
    private javax.swing.JLabel sumAmountlb;
    private javax.swing.JLabel sumArrivelb;
    private javax.swing.JLabel sumDepartslb;
    private javax.swing.JLabel sumFlightID;
    private javax.swing.JButton sumHomeButton;
    private javax.swing.JButton sumLogoutButton;
    private javax.swing.JLabel sumNoofPasslb;
    private javax.swing.JLabel summaryBaselb;
    private javax.swing.JPanel summaryPanel;
    private javax.swing.JLabel summayofticketlb;
    private javax.swing.JCheckBox sun;
    private javax.swing.JLabel tbsadmin;
    private javax.swing.JLabel tesadmin;
    private javax.swing.JLabel thankyoulb;
    private javax.swing.JCheckBox thu;
    private javax.swing.JLabel ticketAmountlb;
    private javax.swing.JLabel ticketBacklb;
    private javax.swing.JLabel timeRiviewlb;
    private javax.swing.JComboBox toComboBox;
    private javax.swing.JLabel toLabel;
    private javax.swing.JTextField to_busi_seattxt;
    private javax.swing.JTextField to_eco_seattxt;
    private javax.swing.JComboBox tocombo;
    private javax.swing.JLabel totalContainer;
    private javax.swing.JLabel totallb;
    private javax.swing.JCheckBox tue;
    private javax.swing.JLabel tyadmin;
    private javax.swing.JLabel updaeinfo;
    private javax.swing.JButton updateAdminInfo;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel updateInfo;
    private javax.swing.JPanel updateUserInfoPanel;
    private javax.swing.JButton updateuserInfoButton;
    private javax.swing.JPanel userInfoPanel;
    private javax.swing.JButton userInfotoHome;
    private javax.swing.JTextField userNameRegistertxt;
    private javax.swing.JRadioButton userRadioButton;
    private javax.swing.JTextField userTextField;
    private javax.swing.JPanel userWelcomePanel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameReglb;
    private javax.swing.JCheckBox wed;
    private javax.swing.JLabel welcomeAdminLabel;
    private javax.swing.JLabel welcomeUsernameLabel;
    // End of variables declaration//GEN-END:variables
}
